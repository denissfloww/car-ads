[{"C:\\study\\car-ads\\client\\src\\index.tsx":"1","C:\\study\\car-ads\\client\\src\\reportWebVitals.ts":"2","C:\\study\\car-ads\\client\\src\\App.tsx":"3","C:\\study\\car-ads\\client\\src\\redux\\store.ts":"4","C:\\study\\car-ads\\client\\src\\styles\\muiStyles.ts":"5","C:\\study\\car-ads\\client\\src\\Router.tsx":"6","C:\\study\\car-ads\\client\\src\\redux\\slices\\authSlice.ts":"7","C:\\study\\car-ads\\client\\src\\components\\Footer.tsx":"8","C:\\study\\car-ads\\client\\src\\components\\NavBar.tsx":"9","C:\\study\\car-ads\\client\\src\\redux\\slices\\appendSlice.ts":"10","C:\\study\\car-ads\\client\\src\\Links.ts":"11","C:\\study\\car-ads\\client\\src\\services\\AuthService.ts":"12","C:\\study\\car-ads\\client\\src\\services\\LocalStorageService.ts":"13","C:\\study\\car-ads\\client\\src\\utils\\HelperFunc.ts":"14","C:\\study\\car-ads\\client\\src\\components\\AuthButton.tsx":"15","C:\\study\\car-ads\\client\\src\\components\\PersonalAccountButton.tsx":"16","C:\\study\\car-ads\\client\\src\\pages\\Main\\NotFoundPage.tsx":"17","C:\\study\\car-ads\\client\\src\\pages\\Auth\\LoginPage.tsx":"18","C:\\study\\car-ads\\client\\src\\pages\\Auth\\SignUpPage.tsx":"19","C:\\study\\car-ads\\client\\src\\pages\\Main\\PersonalAccountPage.tsx":"20","C:\\study\\car-ads\\client\\src\\pages\\Main\\MainPage.tsx":"21","C:\\study\\car-ads\\client\\src\\pages\\Main\\AppendAdPage.tsx":"22","C:\\study\\car-ads\\client\\src\\BackEndUrl.ts":"23","C:\\study\\car-ads\\client\\src\\components\\DemoCreds.tsx":"24","C:\\study\\car-ads\\client\\src\\components\\ErrorBox.tsx":"25","C:\\study\\car-ads\\client\\src\\components\\TabPanel.tsx":"26","C:\\study\\car-ads\\client\\src\\components\\ImageUploader.tsx":"27","C:\\study\\car-ads\\client\\src\\components\\MilageTextMask.tsx":"28","C:\\study\\car-ads\\client\\src\\components\\ContactNumberMask.tsx":"29","C:\\study\\car-ads\\client\\src\\components\\PriceFormatMask.tsx":"30","C:\\study\\car-ads\\client\\src\\services\\AppendService.ts":"31"},{"size":663,"mtime":1627446124143,"results":"32","hashOfConfig":"33"},{"size":425,"mtime":1627446124305,"results":"34","hashOfConfig":"33"},{"size":458,"mtime":1627446124040,"results":"35","hashOfConfig":"33"},{"size":464,"mtime":1627647596355,"results":"36","hashOfConfig":"33"},{"size":12078,"mtime":1628073713041,"results":"37","hashOfConfig":"33"},{"size":1558,"mtime":1627447881848,"results":"38","hashOfConfig":"33"},{"size":2618,"mtime":1627446124288,"results":"39","hashOfConfig":"33"},{"size":286,"mtime":1627446124085,"results":"40","hashOfConfig":"33"},{"size":1840,"mtime":1627446124106,"results":"41","hashOfConfig":"33"},{"size":3751,"mtime":1628598456339,"results":"42","hashOfConfig":"33"},{"size":177,"mtime":1627647596144,"results":"43","hashOfConfig":"33"},{"size":616,"mtime":1628578007803,"results":"44","hashOfConfig":"33"},{"size":459,"mtime":1627446124335,"results":"45","hashOfConfig":"33"},{"size":282,"mtime":1627446124416,"results":"46","hashOfConfig":"33"},{"size":615,"mtime":1627446919453,"results":"47","hashOfConfig":"33"},{"size":1600,"mtime":1627447941381,"results":"48","hashOfConfig":"33"},{"size":702,"mtime":1627446969130,"results":"49","hashOfConfig":"33"},{"size":4731,"mtime":1627446124181,"results":"50","hashOfConfig":"33"},{"size":6593,"mtime":1628249893425,"results":"51","hashOfConfig":"33"},{"size":1083,"mtime":1627446124258,"results":"52","hashOfConfig":"33"},{"size":560,"mtime":1627446124235,"results":"53","hashOfConfig":"33"},{"size":17602,"mtime":1628598456334,"results":"54","hashOfConfig":"33"},{"size":71,"mtime":1627384849546,"results":"55","hashOfConfig":"33"},{"size":393,"mtime":1627446124068,"results":"56","hashOfConfig":"33"},{"size":495,"mtime":1627446124079,"results":"57","hashOfConfig":"33"},{"size":521,"mtime":1627447378432,"results":"58","hashOfConfig":"33"},{"size":1917,"mtime":1627647596086,"results":"59","hashOfConfig":"33"},{"size":866,"mtime":1627989374856,"results":"60","hashOfConfig":"33"},{"size":668,"mtime":1627990001353,"results":"61","hashOfConfig":"33"},{"size":864,"mtime":1627991190213,"results":"62","hashOfConfig":"33"},{"size":453,"mtime":1628579606257,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1uf0s3t",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"66"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"66"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"66"},"C:\\study\\car-ads\\client\\src\\index.tsx",[],[],"C:\\study\\car-ads\\client\\src\\reportWebVitals.ts",[],"C:\\study\\car-ads\\client\\src\\App.tsx",[],"C:\\study\\car-ads\\client\\src\\redux\\store.ts",[],"C:\\study\\car-ads\\client\\src\\styles\\muiStyles.ts",["138","139"],"import { makeStyles } from '@material-ui/core/styles';\n\nexport const useBodyStyles = (darkMode: boolean) =>\n  makeStyles(\n    theme => ({\n      root: {\n        width: '100vW',\n        display: 'flex',\n        flexDirection: 'column',\n        flex: 1,\n        minHeight: '100vH',\n        backgroundColor: darkMode ? '#333' : '#E1E1E4',\n        fontFamily: 'Nunito',\n      },\n    }),\n    { index: 1 },\n  );\n\nexport const useTableStyles = makeStyles(\n  theme => ({\n    table: {\n      '& thead th': {\n        fontWeight: '600',\n        color: theme.palette.secondary.main,\n        backgroundColor: theme.palette.primary.light,\n      },\n    },\n    clickableCell: {\n      '&:hover': {\n        backgroundColor: theme.palette.primary.main + '15',\n        cursor: 'pointer',\n      },\n    },\n    scrollableTable: {\n      '& thead th': {\n        fontWeight: '600',\n        color: theme.palette.secondary.main,\n        backgroundColor: theme.palette.primary.light,\n      },\n      overflowY: 'auto',\n      maxHeight: '350px',\n    },\n  }),\n  { index: 1 },\n);\n\nexport const useDialogStyles = makeStyles(\n  theme => ({\n    dialogWrapper: {\n      paddingBottom: 20,\n      overflow: 'hidden',\n      [theme.breakpoints.down('xs')]: {\n        padding: 0,\n      },\n    },\n    fab: {\n      position: 'fixed',\n      bottom: theme.spacing(2),\n      right: theme.spacing(2),\n      zIndex: 1000,\n    },\n    roundIconButton: {\n      minWidth: 0,\n      padding: '0.65em',\n      borderRadius: '2em',\n    },\n  }),\n  { index: 1 },\n);\n\nexport const useFormStyles = makeStyles(\n  theme => ({\n    submitBtn: {\n      marginTop: '1.5em',\n      height: '3.2em',\n    },\n    avatar: {\n      color: theme.palette.primary.main,\n      backgroundColor: '#d3d3d3',\n    },\n    fieldMargin: {\n      marginTop: '1.5em',\n    },\n    radioGroupForm: {\n      marginTop: '0.8em',\n      width: '100%',\n    },\n    radioGroup: {\n      display: 'flex',\n      alignItems: 'center',\n    },\n    radioGroupLabel: {\n      marginRight: '2em',\n    },\n    formControlLabels: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      width: '80%',\n      [theme.breakpoints.down('xs')]: {\n        flexDirection: 'column',\n        width: 'auto',\n      },\n    },\n  }),\n  { index: 1 },\n);\n\nexport const useAppendPageStyles = makeStyles(theme => ({\n  root: {\n    width: '100',\n    minHeight: 'calc(100vH - 130px)',\n    fontFamily: 'Nunito',\n    paddingTop: '1.5em',\n  },\n  paper: {\n    textAlign: 'left',\n    display: 'flex',\n    justifyContent: 'center',\n    padding: '1.5em',\n    minHeight: 'calc(30vH - 80px)',\n    paddingLeft: '1.5em',\n    marginTop: '1.5em',\n    [theme.breakpoints.down('xs')]: {\n      padding: '0.5em 0.7em',\n      minHeight: 'calc(100vH - 80px)',\n    },\n  },\n  image: {\n    width: '70px',\n    height: '70px',\n  },\n  borderTest: {\n    border: '2px solid black',\n  },\n\n  uploadForm: {\n    padding: 'auto',\n  },\n  headerPaper: {\n    padding: '1.0em',\n    paddingLeft: '1.5em',\n    marginBottom: '1.5em',\n    minHeight: 'calc(15vH - 100px)',\n    textAlign: 'left',\n    display: 'flex',\n    alignItems: 'center',\n    [theme.breakpoints.down('xs')]: {\n      padding: '0.5em 0.7em',\n      minHeight: 'calc(100vH - 80px)',\n    },\n  },\n  imageItemButton: {},\n}));\n\nexport const usePersonalAccountStyles = makeStyles(theme => ({\n  root: {\n    width: '100',\n    minHeight: 'calc(100vH - 130px)',\n    fontFamily: 'Nunito',\n    paddingTop: '1.5em',\n  },\n  headerPaper: {\n    padding: '1.5em',\n    marginBottom: '1.5em',\n    minHeight: 'calc(20vH - 130px)',\n    [theme.breakpoints.down('xs')]: {\n      padding: '0.5em 0.7em',\n      minHeight: 'calc(100vH - 80px)',\n    },\n  },\n  paper: {\n    padding: '1.5em',\n    minHeight: 'calc(100vH - 130px)',\n    [theme.breakpoints.down('xs')]: {\n      padding: '0.5em 0.7em',\n      minHeight: 'calc(100vH - 80px)',\n    },\n  },\n  tabs: {\n    flexGrow: 1,\n    color: 'black',\n  },\n}));\n\nexport const useMainPageStyles = makeStyles(\n  theme => ({\n    root: {\n      padding: '1em 0',\n      [theme.breakpoints.down('xs')]: {\n        padding: '0.5em 0.5em',\n      },\n    },\n    headerPaper: {\n      padding: '0.8em 1.5em',\n      marginBottom: '1em',\n      display: 'flex',\n      alignItems: 'center',\n      [theme.breakpoints.down('xs')]: {\n        padding: '0.3em 0.5em',\n        marginBottom: '0.5em',\n      },\n    },\n    headerIcon: {\n      fontSize: '4.5em',\n      marginRight: '0.2em',\n      [theme.breakpoints.down('xs')]: {\n        fontSize: '3em',\n        marginRight: '0.3em',\n      },\n    },\n    projectsPaper: {\n      padding: '1.5em',\n      minHeight: 'calc(100vH - 244px)',\n      [theme.breakpoints.down('xs')]: {\n        padding: '0.7em 0.3em',\n        minHeight: 'calc(100vH - 160px)',\n      },\n    },\n    projectsListTable: {\n      marginTop: '1.5em',\n      [theme.breakpoints.down('xs')]: {\n        marginTop: 0,\n      },\n    },\n    detailsHeader: {\n      padding: '1.2em 1.5em',\n      marginBottom: '1em',\n      [theme.breakpoints.down('xs')]: {\n        padding: '0.5em 0.7em',\n        marginBottom: '0.5em',\n      },\n    },\n    flexHeader: {\n      display: 'flex',\n      alignItems: 'center',\n    },\n    btnsWrapper: {\n      margin: '1em 0',\n      [theme.breakpoints.down('xs')]: {\n        margin: '0.5em 0',\n      },\n    },\n    membersWrapper: {\n      marginTop: '1em',\n    },\n    filterMembersInput: {\n      [theme.breakpoints.down('xs')]: {\n        width: '55%',\n      },\n    },\n    flexInput: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      [theme.breakpoints.down('xs')]: {\n        marginTop: '0.3em',\n      },\n    },\n    bugsPaper: {\n      padding: '1.5em',\n      minHeight: 'calc(100vH - 356px)',\n      [theme.breakpoints.down('xs')]: {\n        padding: '0.5em 0.7em',\n        minHeight: 'calc(100vH - 256px)',\n      },\n    },\n    bugsActionCard: {\n      margin: '1.5em 0',\n      [theme.breakpoints.down('xs')]: {\n        margin: '0.5em 0',\n      },\n    },\n    notesPaper: {\n      padding: '1.5em',\n      minHeight: 'calc(100vH - 420px)',\n      [theme.breakpoints.down('xs')]: {\n        padding: '0.5em 0.7em',\n        minHeight: 'calc(100vH - 320px)',\n      },\n    },\n    notesWrapper: {\n      margin: '1.5em 0',\n    },\n    sortNotesInput: {\n      width: '22%',\n      [theme.breakpoints.down('xs')]: {\n        width: '55%',\n      },\n    },\n    singleNote: {\n      display: 'flex',\n      alignItems: 'flex-start',\n      marginBottom: '0.3em',\n      marginTop: '0.8em',\n    },\n    noteBody: {\n      marginTop: '0.2em',\n    },\n    avatar: {\n      width: theme.spacing(4.8),\n      height: theme.spacing(4.8),\n      marginRight: '0.4em',\n      marginTop: '0.3em',\n      color: theme.palette.primary.main,\n      backgroundColor: '#d3d3d3',\n    },\n    notesBtnWrapper: {\n      margin: '0.5em 0',\n    },\n    iconText: {\n      verticalAlign: 'middle',\n      display: 'inline-flex',\n    },\n    textIconsWrapper: {\n      display: 'flex',\n      width: '100px',\n      justifyContent: 'space-between',\n    },\n    listItemWrapper: {\n      padding: '0.4em 0.3em',\n    },\n    flexedWrapper: {\n      width: '100%',\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      marginTop: '0.3em',\n    },\n    roundIconButton: {\n      minWidth: 0,\n      padding: '0.65em',\n      borderRadius: '2em',\n    },\n    gotoIcon: {\n      fontSize: '0.7em',\n      marginLeft: '0.4em',\n    },\n    marginText: {\n      marginBottom: '0.35em',\n    },\n    notFoundPaper: {\n      padding: '1.5em',\n      minHeight: 'calc(100vH - 130px)',\n      [theme.breakpoints.down('xs')]: {\n        padding: '0.5em 0.7em',\n        minHeight: 'calc(100vH - 80px)',\n      },\n    },\n    error404Image: {\n      width: '250px',\n      display: 'block',\n      margin: '0 auto',\n      [theme.breakpoints.down('xs')]: {\n        width: '150px',\n      },\n    },\n    error404Text: {\n      fontSize: '2.2em',\n      textAlign: 'center',\n      marginTop: '1em',\n      [theme.breakpoints.down('xs')]: {\n        fontSize: '1.5em',\n      },\n    },\n    notFoundWrapper: {\n      marginTop: '6em',\n    },\n  }),\n  { index: 1 },\n);\n\nexport const useActionCardStyles = makeStyles(\n  theme => ({\n    inputs: {\n      display: 'flex',\n      minWidth: '100%',\n      justifyContent: 'space-between',\n      marginBottom: '1.5em',\n      [theme.breakpoints.down('xs')]: {\n        marginBottom: '0.7em',\n      },\n    },\n    searchBarWrapper: {\n      width: '70%',\n      [theme.breakpoints.down('xs')]: {\n        width: '55%',\n      },\n    },\n    sortBarWrapper: {\n      width: '25%',\n      [theme.breakpoints.down('xs')]: {\n        width: '42%',\n      },\n    },\n    flexWrapper: {\n      display: 'flex',\n      minWidth: '100%',\n      justifyContent: 'space-between',\n      [theme.breakpoints.down('xs')]: {\n        justifyContent: 'flex-start',\n        marginLeft: '0.2em',\n      },\n    },\n  }),\n  { index: 1 },\n);\n\nexport const useNavStyles = makeStyles(\n  theme => ({\n    appBar: {\n      backgroundColor: '#990021',\n      paddingTop: '0.2em',\n      paddingBottom: '0.2em',\n    },\n    menuButton: {\n      fontFamily: 'Nunito',\n      size: '18px',\n      marginLeft: '38px',\n      color: 'white',\n    },\n    iconButton: {\n      fontFamily: 'Nunito',\n      size: '18px',\n      color: 'white',\n    },\n    toolbar: {},\n    logo: {\n      textAlign: 'left',\n    },\n    container: {\n      position: 'sticky',\n      top: 0,\n      zIndex: 100,\n    },\n    leftPortion: {\n      flexGrow: 1,\n      display: 'flex',\n      alignItems: 'center',\n      backgroundColor: '#990021',\n    },\n    logoWrapper: {\n      marginRight: '1em',\n      display: 'flex',\n      alignItems: 'center',\n    },\n    logoBtn: {\n      textTransform: 'none',\n      fontSize: '1.2em',\n      padding: '0.1em',\n      marginRight: '0.3em',\n      [theme.breakpoints.down('xs')]: {\n        fontSize: '1em',\n        marginLeft: '0.6em',\n      },\n    },\n    backBtn: {\n      [theme.breakpoints.down('xs')]: {\n        marginLeft: '0.6em',\n      },\n    },\n    svgImage: {\n      width: '35px',\n      marginRight: '5px',\n      [theme.breakpoints.down('xs')]: {\n        width: '30px',\n      },\n    },\n    rightBtnWrapper: {\n      display: 'flex',\n      alignItems: 'center',\n    },\n    lastBtn: {\n      marginLeft: '1em',\n    },\n    threeDotsBtn: {\n      padding: '0.35em',\n    },\n    menuIcon: {\n      marginRight: '10px',\n    },\n    userInfo: {\n      display: 'flex',\n      alignItems: 'center',\n    },\n    avatar: {\n      width: theme.spacing(4.1),\n      height: theme.spacing(4.1),\n      marginRight: '0.4em',\n      color: theme.palette.primary.main,\n      backgroundColor: '#d3d3d3',\n      [theme.breakpoints.down('xs')]: {\n        width: theme.spacing(3.5),\n        height: theme.spacing(3.5),\n      },\n    },\n    btnsWrapper: {\n      display: 'flex',\n      alignItems: 'center',\n    },\n    userBtnMob: {\n      padding: '0.1em',\n    },\n  }),\n  { index: 1 },\n);\n\nexport const useAuthPageStyles = makeStyles(\n  theme => ({\n    root: {\n      padding: '1.5em 3em',\n      width: '330px',\n      margin: 'auto',\n      marginTop: '16vH',\n      [theme.breakpoints.down('xs')]: {\n        width: 'auto',\n        margin: '0.5em 0.5em',\n        padding: '1em',\n      },\n    },\n    form: {\n      marginTop: '3em',\n    },\n    inputField: {\n      marginBottom: '1.5em',\n    },\n    submitButton: {\n      marginTop: '0.5em',\n      height: '3.1em',\n      fontSize: '1em',\n      fontWeight: 500,\n    },\n    titleLogo: {\n      display: 'block',\n      width: '7em',\n      margin: '0 auto',\n      [theme.breakpoints.down('xs')]: {\n        width: '6em',\n      },\n    },\n    footerText: {\n      marginTop: '1em',\n      textAlign: 'center',\n    },\n    headerText: {\n      marginBottom: '1em',\n      marginTop: '0.5em',\n      fontSize: '24pt',\n      textAlign: 'center',\n      fontFamily: 'Nunito',\n    },\n    link: {\n      cursor: 'pointer',\n    },\n    iconColor: {\n      color: '#990021',\n    },\n  }),\n  { index: 1 },\n);\n\nexport const useFooterStyles = makeStyles(\n  theme => ({\n    footer: {\n      marginTop: 'calc(5% + 60px)',\n      bottom: 0,\n      borderTop: '1px solid grey',\n      opacity: '50%',\n    },\n  }),\n  { index: 1 },\n);\n","C:\\study\\car-ads\\client\\src\\Router.tsx",[],"C:\\study\\car-ads\\client\\src\\redux\\slices\\authSlice.ts",[],"C:\\study\\car-ads\\client\\src\\components\\Footer.tsx",[],"C:\\study\\car-ads\\client\\src\\components\\NavBar.tsx",[],"C:\\study\\car-ads\\client\\src\\redux\\slices\\appendSlice.ts",["140","141","142","143","144"],"C:\\study\\car-ads\\client\\src\\Links.ts",[],"C:\\study\\car-ads\\client\\src\\services\\AuthService.ts",[],"C:\\study\\car-ads\\client\\src\\services\\LocalStorageService.ts",[],"C:\\study\\car-ads\\client\\src\\utils\\HelperFunc.ts",[],"C:\\study\\car-ads\\client\\src\\components\\AuthButton.tsx",[],"C:\\study\\car-ads\\client\\src\\components\\PersonalAccountButton.tsx",[],"C:\\study\\car-ads\\client\\src\\pages\\Main\\NotFoundPage.tsx",[],"C:\\study\\car-ads\\client\\src\\pages\\Auth\\LoginPage.tsx",["145"],"import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login, selectAuthState, cancel, clearAuthError } from '../../redux/slices/authSlice';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\n\nimport CarIcon from '../../svg/logo.png';\nimport { Button, IconButton, InputAdornment, Link, TextField, Typography } from '@material-ui/core';\nimport { Paper } from '@material-ui/core';\nimport { useAuthPageStyles } from '../../styles/muiStyles';\n\nimport PersonIcon from '@material-ui/icons/Person';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport LockIcon from '@material-ui/icons/Lock';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport DemoCreds from '../../components/DemoCreds';\nimport { signupLink } from '../../Links';\nimport { Link as RouterLink } from 'react-router-dom';\nimport ErrorBox from '../../components/ErrorBox';\n\ninterface InputValues {\n  username: string;\n  password: string;\n}\n\nconst validationSchema = yup.object({\n  username: yup.string().required('Required'),\n  password: yup.string().required('Required'),\n});\n\nconst LoginPage = () => {\n  const classes = useAuthPageStyles();\n  const dispatch = useDispatch();\n  const { loading, error } = useSelector(selectAuthState);\n  const [showPass, setShowPass] = useState<boolean>(false);\n  const { register, handleSubmit, errors } = useForm({\n    mode: 'onChange',\n    resolver: yupResolver(validationSchema),\n  });\n  const history = useHistory();\n\n  const handleLogin = ({ username, password }: InputValues) => {\n    dispatch(login({ username, password }, history));\n  };\n\n  const handleCancel = () => {\n    dispatch(cancel());\n  };\n\n  return (\n    <div>\n      <Paper className={classes.root} elevation={2}>\n        <form onSubmit={handleSubmit(handleLogin)} className={classes.form}>\n          <img src={CarIcon} alt='bug-logo' className={classes.titleLogo} />\n          <Typography variant='body1' className={classes.headerText}>\n            Вход\n          </Typography>\n          <div className={classes.inputField}>\n            <TextField\n              required\n              fullWidth\n              inputRef={register}\n              type='text'\n              label='Логин'\n              name='username'\n              variant='outlined'\n              error={'username' in errors}\n              helperText={'username' in errors ? errors.username.message : ''}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position='start'>\n                    <PersonIcon className={classes.iconColor} />\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </div>\n          <div className={classes.inputField}>\n            <TextField\n              required\n              fullWidth\n              inputRef={register}\n              type={showPass ? 'text' : 'password'}\n              label='Пароль'\n              name='password'\n              variant='outlined'\n              error={'password' in errors}\n              helperText={'password' in errors ? errors.password.message : ''}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position='end'>\n                    <IconButton size='small' onClick={() => setShowPass(prevState => !prevState)}>\n                      {showPass ? <VisibilityOffIcon /> : <VisibilityIcon />}\n                    </IconButton>\n                  </InputAdornment>\n                ),\n                startAdornment: (\n                  <InputAdornment position='start'>\n                    <LockIcon className={classes.iconColor} />\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </div>\n          <Button\n            color='inherit'\n            variant='contained'\n            size='large'\n            fullWidth\n            startIcon={<ExitToAppIcon />}\n            type='submit'\n            className={classes.submitButton}\n            disabled={loading}\n          >\n            Войти\n          </Button>\n          <DemoCreds />\n        </form>\n        <Typography variant='body1' className={classes.footerText}>\n          Нет аккаунта?{' '}\n          <Link color='primary' to={signupLink} component={RouterLink}>\n            Зарегистрироваться\n          </Link>\n        </Typography>\n        {error && <ErrorBox errorMsg={error} clearErrorMsg={() => dispatch(clearAuthError())} />}\n      </Paper>\n    </div>\n  );\n};\n\nexport default LoginPage;\n","C:\\study\\car-ads\\client\\src\\pages\\Auth\\SignUpPage.tsx",["146"],"import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectAuthState, cancel, signup, setAuthError, clearAuthError } from '../../redux/slices/authSlice';\n\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\n\nimport CarIcon from '../../svg/logo.png';\nimport { Button, IconButton, InputAdornment, Link, TextField, Typography } from '@material-ui/core';\nimport { Paper } from '@material-ui/core';\nimport { useAuthPageStyles } from '../../styles/muiStyles';\n\nimport PersonIcon from '@material-ui/icons/Person';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport LockIcon from '@material-ui/icons/Lock';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\n\nimport { loginLink } from '../../Links';\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\nimport ErrorBox from '../../components/ErrorBox';\n\ninterface InputValues {\n  username: string;\n  password: string;\n  confirmPassword: string;\n}\n\nconst validationSchema = yup.object({\n  username: yup\n    .string()\n    .required('Заполните это поле!')\n    .max(20, 'Должно быть не более 20 символов')\n    .min(3, 'Должно быть не менее 3 символов')\n    .matches(/^[a-zA-Z0-9-_]*$/, 'Допускаются только буквы, тире и символы подчеркивания'),\n  password: yup.string().required('Заполните это поле!').min(6, 'Должно быть не менее 6 символов'),\n  confirmPassword: yup.string().required('Заполните это поле!').min(6, 'Должно быть не менее 6 символов'),\n});\n\nconst SignupPage = () => {\n  const classes = useAuthPageStyles();\n  const dispatch = useDispatch();\n  const { loading, error } = useSelector(selectAuthState);\n  const [showPass, setShowPass] = useState<boolean>(false);\n  const [showConfirmPass, setShowConfirmPass] = useState<boolean>(false);\n\n  const { register, handleSubmit, errors } = useForm({\n    mode: 'onChange',\n    resolver: yupResolver(validationSchema),\n  });\n  const history = useHistory();\n  const handleSignUp = ({ username, password, confirmPassword }: InputValues) => {\n    if (password !== confirmPassword) {\n      return dispatch(setAuthError('Пароли не совпадают'));\n    }\n    dispatch(signup({ username, password }, history));\n  };\n\n  const handleCancel = () => {\n    dispatch(cancel());\n  };\n\n  return (\n    <div>\n      <Paper className={classes.root} elevation={2}>\n        <form onSubmit={handleSubmit(handleSignUp)} className={classes.form}>\n          <img src={CarIcon} alt='bug-logo' className={classes.titleLogo} />\n          <Typography variant='body1' className={classes.headerText}>\n            Регистрация\n          </Typography>\n          <div className={classes.inputField}>\n            <TextField\n              required\n              fullWidth\n              inputRef={register}\n              type='text'\n              name='username'\n              label='Логин'\n              variant='outlined'\n              error={'username' in errors}\n              helperText={'username' in errors ? errors.username.message : ''}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position='start'>\n                    <PersonIcon className={classes.iconColor} />\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </div>\n          <div className={classes.inputField}>\n            <TextField\n              required\n              fullWidth\n              inputRef={register}\n              type={showPass ? 'text' : 'password'}\n              name='password'\n              label='Пароль'\n              variant='outlined'\n              error={'password' in errors}\n              helperText={'password' in errors ? errors.password.message : ''}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position='end'>\n                    <IconButton size='small' onClick={() => setShowPass(prevState => !prevState)}>\n                      {showPass ? <VisibilityOffIcon /> : <VisibilityIcon />}\n                    </IconButton>\n                  </InputAdornment>\n                ),\n                startAdornment: (\n                  <InputAdornment position='start'>\n                    <LockIcon className={classes.iconColor} />\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </div>\n          <div className={classes.inputField}>\n            <TextField\n              required\n              fullWidth\n              inputRef={register}\n              type={showConfirmPass ? 'text' : 'password'}\n              label='Подтверждение пароля'\n              name='confirmPassword'\n              variant='outlined'\n              error={'confirmPassword' in errors}\n              helperText={'confirmPassword' in errors ? errors.confirmPassword.message : ''}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position='end'>\n                    <IconButton size='small' onClick={() => setShowConfirmPass(prevState => !prevState)}>\n                      {showConfirmPass ? <VisibilityOffIcon /> : <VisibilityIcon />}\n                    </IconButton>\n                  </InputAdornment>\n                ),\n                startAdornment: (\n                  <InputAdornment position='start'>\n                    <LockIcon className={classes.iconColor} />\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </div>\n          <Button\n            color='inherit'\n            variant='contained'\n            size='large'\n            fullWidth\n            startIcon={<PersonAddIcon />}\n            type='submit'\n            className={classes.submitButton}\n            disabled={loading}\n          >\n            Зарегистрироваться\n          </Button>\n        </form>\n        <Typography variant='body1' className={classes.footerText}>\n          Уже есть аккаунт?{' '}\n          <Link color='primary' to={loginLink} component={RouterLink}>\n            Войти\n          </Link>\n        </Typography>\n        {error && <ErrorBox errorMsg={error} clearErrorMsg={() => dispatch(clearAuthError())} />}\n      </Paper>\n    </div>\n  );\n};\n\nexport default SignupPage;\n","C:\\study\\car-ads\\client\\src\\pages\\Main\\PersonalAccountPage.tsx",["147"],"import React from 'react';\nimport { usePersonalAccountStyles } from '../../styles/muiStyles';\nimport { Paper, Tab } from '@material-ui/core';\nimport Tabs from '@material-ui/core/Tabs';\nimport TabPanel from '../../components/TabPanel';\n\nconst PersonalAccountPage = () => {\n  const classes = usePersonalAccountStyles();\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event: any, newValue: React.SetStateAction<number>) => {\n    setValue(newValue);\n  };\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <div className={classes.tabs}>\n          <Tabs value={value} onChange={handleChange}>\n            <Tab label='Объявления' />\n            <Tab label='Настройки' />\n          </Tabs>\n          <TabPanel index={0} value={value}>\n            Тут мои объявления\n          </TabPanel>\n          <TabPanel index={1} value={value}>\n            Тут мои найстройки\n          </TabPanel>\n        </div>\n      </Paper>\n    </div>\n  );\n};\n\nexport default PersonalAccountPage;\n","C:\\study\\car-ads\\client\\src\\pages\\Main\\MainPage.tsx",[],"C:\\study\\car-ads\\client\\src\\pages\\Main\\AppendAdPage.tsx",["148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175"],"import {\n  Button,\n  Card,\n  CardActionArea,\n  CardActions,\n  CardContent,\n  CardMedia,\n  createStyles,\n  FormControlLabel,\n  Grid,\n  GridList,\n  GridListTile,\n  GridListTileBar,\n  Paper,\n  RadioGroup,\n  TextField,\n  Theme,\n  Typography\n} from '@material-ui/core';\nimport React, {useEffect, useState} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  changeBody,\n  changeBrand,\n  changeModel,\n  changeYear,\n  fetchBrands,\n  selectAppendState\n} from '../../redux/slices/appendSlice';\nimport { useAppendPageStyles } from '../../styles/muiStyles';\nimport DirectionsCarIcon from '@material-ui/icons/DirectionsCar';\nimport { Autocomplete } from '@material-ui/lab';\nimport { ImageListType } from 'react-images-uploading';\nimport ImageUploader from '../../components/ImageUploader';\nimport { DropzoneArea } from 'material-ui-dropzone';\nimport MaskedInput from 'react-text-mask';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport NumberFormat from 'react-number-format';\nimport { ColorPalette } from 'material-ui-color';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport MilageFormatCustom from '../../components/MilageTextMask';\nimport ContactNumberMask from \"../../components/ContactNumberMask\";\nimport { Radio } from '@material-ui/core';\nimport PriceFormatCustom from '../../components/PriceFormatMask';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport {useForm} from \"react-hook-form\";\nimport {yupResolver} from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport {setAuthError, signup} from \"../../redux/slices/authSlice\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\nimport '../../styles/AppendPageStyle.css'\n\nconst validationSchema = yup.object({\n  mileage: yup.string().required('Заполните это поле!'),\n  vin: yup.string().required('Заполните это поле!'),\n  price: yup.string().required('Заполните это поле!'),\n  phone: yup.string().required('Заполните это поле!').matches(/^7\\([1-9]+\\)\\s\\d+-\\d{4}$/, 'Введите корректный формат телефона'),\n  brand: yup.string().required()\n});\n\nconst AppendAdPage = () => {\n  const dispatch = useDispatch();\n  const classes = useAppendPageStyles();\n\n  const {\n    showModels,\n    showYear,\n    showBody,\n    brandValue,\n    modelValue,\n    yearValue,\n    bodyValue,\n    showEngine,\n    brands,\n    models }: any = useSelector(selectAppendState);\n\n  const [images, setImages] = useState([]);\n  const [selectedBrand, setSelectedBrand] = useState(null);\n  const [selectedModel, setSelectedModel] = useState(null);\n  const [selectedYear, setSelectedYear] = useState(null);\n  const [selectedBody, setSelectedBody] = useState(null);\n  const maxNumber = 40;\n  useEffect(() => {dispatch(fetchBrands())}, [1]);\n\n  const handleBrandChange = (e: any, value: any) => {\n    dispatch(changeBrand(value));\n  };\n\n  const handleModelChange = (_: any, value: any) => {\n    dispatch(changeModel(value));\n  };\n\n  const handleYearChange = (_: any, value: any) => {\n    dispatch(changeYear(value));\n  };\n\n  const handleBodyChange = (_: any, value: any) => {\n    dispatch(changeBody(value))\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log()\n  };\n\n  const { register: append, handleSubmit, errors } = useForm({\n    mode: 'onChange',\n    resolver: yupResolver(validationSchema),\n  });\n\n  const handleAppend = () => {\n    console.log('Бан')\n  };\n\n  return (\n    <>\n      <div className={classes.root}>\n        <form onSubmit={handleSubmit(handleAppend)}>\n        <Paper className={classes.headerPaper}>\n          <DirectionsCarIcon fontSize='large' style={{ fontSize: '4.5em', marginRight: '0.2em' }} />\n          <h1>Продайте свой автомобиль</h1>\n        </Paper>\n        <Paper className={classes.paper}>\n          <div style={{ width: '50%' }}>\n            <h2>Основная информация</h2>\n            <p style={{ display: 'inline' }}>\n              <h3>Выберите марку авто</h3>\n              <Autocomplete\n                id='category'\n                style={{ marginBottom: 8 }}\n                options={brands}\n                getOptionLabel={option => option.name}\n                value={brandValue}\n                getOptionSelected={(option, value) => option.name === value.name}\n                includeInputInList\n                disableClearable\n                onChange={handleBrandChange}\n                renderInput={params =>\n                    <TextField\n                        {...params}\n                        label='Марка'\n                        fullWidth\n                        inputRef={append}\n                        variant='outlined'\n                        name='brand'\n                        error={'brand' in errors}\n                        helperText={'brand' in errors ? errors.brand.message : ''}\n                    />\n                }\n                renderOption={options => {\n                  return (\n                    <>\n                      <img style={{ width: '40px', height: '40px' }} src={options.imageUrl} alt='' />\n                      {options.name}\n                    </>\n                  );\n                }}\n              />\n            </p>\n            {showModels ? (\n              <p>\n                <h3>Выберите модель</h3>\n                <Autocomplete\n                  id='subcategory'\n                  options={models ? models : null}\n                  getOptionLabel={option => option.name}\n                  getOptionSelected={(option, value) => option.name === value.name}\n                  value={modelValue}\n                  disableClearable\n                  onChange={handleModelChange}\n                  renderInput={params =>\n                      <TextField {...params} label='Модель' variant='outlined' />\n                  }\n                />\n              </p>\n            ) : null}\n            {showYear ? (\n              <p>\n                <h3>Выберите год выпуска авто</h3>\n                <Autocomplete\n                  id='year'\n                  options={testYear}\n                  getOptionLabel={option => option.name}\n                  getOptionSelected={(option, value) => option.name === value.name}\n                  value={yearValue}\n                  disableClearable\n                  onChange={handleYearChange}\n                  renderInput={params => <TextField {...params} label='Год выпуска' variant='outlined' />}\n                />\n              </p>\n            ) : null}\n            {showBody ? (\n              <p>\n                <h3>Выберите тип кузова</h3>\n                <Autocomplete\n                  id='body'\n                  options={testBody}\n                  getOptionLabel={option => option.name}\n                  getOptionSelected={(option, value) => option.name === value.name}\n                  value={bodyValue}\n                  disableClearable\n                  onChange={handleBodyChange}\n                  renderInput={params => <TextField {...params} label='Тип кузова' variant='outlined' />}\n                />\n              </p>\n            ) : null}\n            {showBody ? (\n                <p>\n                  <h3>Выберите поколение</h3>\n                  <RadioGroup aria-label=\"gender\" name=\"gender1\" onChange={() => {alert('fsdf')}}>\n                    <FormControlLabel value=\"female\" control={<Radio color=\"primary\"/> } label=\"1\" />\n                    <FormControlLabel value=\"male\" control={<Radio color=\"primary\" />} label=\"2\" />\n                    <FormControlLabel value=\"other\" control={<Radio color=\"primary\" />} label=\"3\" />\n                    <FormControlLabel value=\"disabled\" control={<Radio color=\"primary\" />} label=\"4+\" />\n                  </RadioGroup>\n                </p>\n            ) : null}\n\n            {showEngine  ? (\n                <p>\n                  <h3>Выберите тип двигателя</h3>\n                  <Autocomplete\n                      id='body'\n                      options={testEngine}\n                      getOptionLabel={option => option.name}\n                      getOptionSelected={(option, value) => option.name === value.name}\n                      disableClearable\n                      onChange={handleBodyChange}\n                      renderInput={\n                        params => <TextField {...params} label='Тип двигателя' variant='outlined' />\n                      }\n                  />\n                </p>\n            ) : null}\n            {showEngine ? (\n                <p>\n                  <h3>Выберите привод</h3>\n                  <Autocomplete\n                      id='body'\n                      options={testDrive}\n                      value={testDrive.length == 1? testDrive[0] : null}\n                      getOptionLabel={option => option.name}\n                      getOptionSelected={(option, value) => option.name === value.name}\n                      onChange={handleBodyChange}\n                      renderInput={params => <TextField {...params} label='Тип' variant='outlined' />}\n                  />\n                </p>\n            ) : null}\n            {showEngine ? (\n                <p>\n                  <h3>Выберите коробку передач</h3>\n                  <Autocomplete\n                      id='body'\n                      options={testTransmission}\n                      disableClearable\n                      getOptionLabel={option => option.name}\n                      getOptionSelected={(option, value) => option.name === value.name}\n                      onChange={handleBodyChange}\n                      renderInput={params => <TextField {...params} label='Тип' variant='outlined' />}\n                  />\n                </p>\n            ) : null}\n            {showEngine ? (\n                <p>\n                  <h3>Поколение</h3>\n                  <GridList>\n                    {testGeneration.map((item) => (\n                        <div>\n                          <input\n                              type=\"radio\" name=\"generation\"\n                              // onChange={(e) => {alert(e.target.value)}}\n                              value={item.name}\n                              id={item.name} className=\"input-hidden\" />\n                          <label htmlFor={item.name}>\n                            <GridListTile className='generation-image-div'>\n                              <img src={item.img}/>\n                              <GridListTileBar\n                                  title={item.name}\n                                  subtitle={item.yearRelease}\n                              />\n                            </GridListTile>\n                          </label>\n                        </div>\n                    ))}\n                  </GridList>\n                </p>\n\n            ) : null}\n            <p>\n              <h3>VIN-номер</h3>\n              <TextField\n                  required\n                  fullWidth\n                  inputRef={append}\n                  style={{width:'100%'}}\n                  label=\"vin\"\n                  name=\"vin\"\n                  onChange={handleChange}\n                  variant=\"outlined\"\n                  value='test'\n                  id=\"formatted-numberformat-input\"\n                  error={'vin' in errors}\n                  helperText={'vin' in errors ? errors.vin.message : ''}\n              />\n            </p>\n          </div>\n        </Paper>\n        <Paper className={classes.paper}>\n          <div style={{ width: '100%' }}>\n            <h2>Добавьте фото</h2>\n            <DropzoneArea\n                filesLimit={maxNumber}\n                dropzoneText='Нажмите или перетащите фото'\n                acceptedFiles={['image/*']}\n                onChange={(files: any) => console.log('Files:', files)}\n            />\n          </div>\n        </Paper>\n        <Paper className={classes.paper}>\n          <div style={{ width: '50%' }}>\n            <h2>Дополнительная информация</h2>\n            <p>\n              <h3>Пробег</h3>\n              <TextField\n                  required\n                  fullWidth\n                  inputRef={append}\n                  label=\"Км\"\n                  value='4234'\n                  onChange={handleChange}\n                  type='text'\n                  variant=\"outlined\"\n                  name=\"mileage\"\n                  id=\"formatted-numberformat-input\"\n                  error={'mileage' in errors}\n                  helperText={'mileage' in errors ? errors.mileage.message : ''}\n                  InputProps={{\n                    inputComponent: MilageFormatCustom as any,\n                  }}\n              />\n            </p>\n            <p>\n              <h3>\n                Цвет\n              </h3>\n              <ColorPalette palette={palette} onSelect={(color) => { console.log(palette[color])}} />\n            </p>\n            <p>\n              <h3>\n                Комментарий\n              </h3>\n              <TextField\n                  variant=\"outlined\"\n                  style={{width:\"100%\"}}\n                  placeholder=\"Добавьте описание\"\n                  multiline\n                  rows={2}\n                  rowsMax={Infinity}\n              />\n            </p>\n            <p>\n              <h3>\n                Контактный телефон\n              </h3>\n              <TextField\n                  required\n                  fullWidth\n                  inputRef={append}\n                  value='9999999999'\n                  label=\"Телефон\"\n                  onChange={handleChange}\n                  variant=\"outlined\"\n                  name=\"phone\"\n                  id=\"formatted-numberformat-input\"\n                  error={'phone' in errors}\n                  helperText={'phone' in errors ? errors.phone.message : ''}\n                  InputProps={{\n                    inputComponent: ContactNumberMask as any,\n                  }}\n              />\n            </p>\n            <p>\n              <h3>\n                Колличество владельцев\n              </h3>\n              <RadioGroup aria-label=\"gender\" name=\"gender1\">\n                <FormControlLabel value=\"female\" control={<Radio required color=\"primary\" />} label=\"1\" />\n                <FormControlLabel value=\"male\" control={<Radio required color=\"primary\" />} label=\"2\" />\n                <FormControlLabel value=\"other\" control={<Radio required color=\"primary\" />} label=\"3\" />\n                <FormControlLabel value=\"disabled\" control={<Radio required color=\"primary\" />} label=\"4+\" />\n              </RadioGroup>\n            </p>\n            <p>\n              <h3>\n                Цена\n              </h3>\n              <TextField\n                  required\n                  fullWidth\n                  inputRef={append}\n                  value='200000'\n                  label=\"В рублях\"\n                  onChange={handleChange}\n                  variant=\"outlined\"\n                  name=\"price\"\n                  id=\"formatted-numberformat-input\"\n                  error={'price' in errors}\n                  helperText={'price' in errors ? errors.price.message : ''}\n                  InputProps={{\n                    inputComponent: PriceFormatCustom as any,\n                  }}\n              />\n            </p>\n            <p>\n              <Button variant=\"contained\" color=\"primary\" type='submit' startIcon={<PublishIcon />}>\n                Подать объявление\n              </Button>\n            </p>\n          </div>\n        </Paper>\n        </form>\n      </div>\n    </>\n  );\n};\n\nconst testBrand = [\n  { name: 'Opel', imageUrl: 'https://avatars.mds.yandex.net/get-verba/937147/2a00000179b3e4e1c4c28087a58eb0595a12/logo' },\n  { name: 'BMW', imageUrl: 'https://avatars.mds.yandex.net/get-verba/1030388/2a00000179af8e23344d871bcfa394f0c60d/logo' },\n  { name: 'Toyota', imageUrl: 'https://avatars.mds.yandex.net/get-verba/1030388/2a00000179af8e23344d871bcfa394f0c60d/logo' },\n];\n\nconst testModel = [{ name: 'Vectra' }, { name: 'Selena' }, { name: 'm3' }];\n\nconst testYear = [{ name: '2021' }, { name: '2000' }, { name: '3000' }];\n\nconst testBody = [{ name: 'Седан' }, { name: 'Кроссовер' }, { name: 'Лифтбек' }];\n\nconst testEngine = [{ name: 'Бензиновый' }, { name: 'Дизельный' }];\n\nconst testTransmission = [{name: 'Автомат'}, { name: 'Механическая'}]\n\nconst testDrive = [{name: 'Передний'},{ name: 'Задний'}]\nconst testGeneration = [\n    {name: 'I', yearRelease:'2021-2018', img:'https://avatars.mds.yandex.net/get-verba/937147/2a0000016ffbbb0f0140d930c0448202630f/minicard'},\n    {name: 'II', yearRelease:'2023-2030', img:'https://avatars.mds.yandex.net/get-verba/937147/2a0000016ffbbb0f0140d930c0448202630f/minicard'},\n  {name: 'III', yearRelease:'2040-2030', img:'https://avatars.mds.yandex.net/get-verba/937147/2a0000016ffbbb0f0140d930c0448202630f/minicard'}\n]\n\nconst palette = {\n  red: '#ff0000',\n  blue: '#0000ff',\n  green: '#00ff00',\n  yellow: 'yellow',\n  cyan: 'cyan',\n  lime: 'lime',\n  gray: 'gray',\n  orange: 'orange',\n  purple: 'purple',\n  black: 'black',\n  white: 'white',\n  pink: 'pink',\n  darkblue: 'darkblue',\n};\n\nexport default AppendAdPage;\n","C:\\study\\car-ads\\client\\src\\BackEndUrl.ts",[],"C:\\study\\car-ads\\client\\src\\components\\DemoCreds.tsx",[],"C:\\study\\car-ads\\client\\src\\components\\ErrorBox.tsx",[],"C:\\study\\car-ads\\client\\src\\components\\TabPanel.tsx",["176"],"import { Box } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\n\nconst TabPanel = (props: any) => {\n  const { children, value, index, ...other } = props;\n  return (\n    <div role='tabpanel' hidden={value !== index} id={`simple-tabpanel-${index}`} aria-labelledby={`simple-tab-${index}`} {...other}>\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n};\n\nexport default TabPanel;\n","C:\\study\\car-ads\\client\\src\\components\\ImageUploader.tsx",[],[],"C:\\study\\car-ads\\client\\src\\components\\MilageTextMask.tsx",["177"],"import NumberFormat from \"react-number-format\";\r\nimport React from \"react\";\r\n\r\ninterface NumberFormatCustomProps {\r\n    inputRef: (instance: NumberFormat | null) => void;\r\n    onChange: (event: { target: { name: string; value: string } }) => void;\r\n    name: string;\r\n}\r\n\r\nfunction MilageFormatCustom(props: NumberFormatCustomProps) {\r\n    const { inputRef, onChange, ...other } = props;\r\n\r\n    return (\r\n        <NumberFormat\r\n            {...other}\r\n            getInputRef={inputRef}\r\n            onValueChange={(values: any) => {\r\n                onChange({\r\n                    target: {\r\n                        name: props.name,\r\n                        value: values.value,\r\n                    },\r\n                });\r\n            }}\r\n            thousandSeparator=' '\r\n            isNumericString\r\n        />\r\n    );\r\n}\r\n\r\nexport default MilageFormatCustom","C:\\study\\car-ads\\client\\src\\components\\ContactNumberMask.tsx",["178"],"import React from 'react';\r\nimport MaskedInput from 'react-text-mask';\r\n\r\ninterface TextMaskCustomProps {\r\n    inputRef: (ref: HTMLInputElement | null) => void;\r\n}\r\n\r\nfunction ContactNumberMask(props: TextMaskCustomProps) {\r\n    const { inputRef, ...other } = props;\r\n\r\n    return (\r\n        <MaskedInput\r\n            {...other}\r\n            ref={(ref: any) => {\r\n                inputRef(ref ? ref.inputElement : null);\r\n            }}\r\n            mask={['7','(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\r\n            placeholderChar={'\\u2000'}\r\n            showMask\r\n        />\r\n    );\r\n}\r\n\r\nexport default ContactNumberMask;\r\n","C:\\study\\car-ads\\client\\src\\components\\PriceFormatMask.tsx",["179"],"import NumberFormat from \"react-number-format\";\r\nimport React from \"react\";\r\n\r\ninterface NumberFormatCustomProps {\r\n    inputRef: (instance: NumberFormat | null) => void;\r\n    onChange: (event: { target: { name: string; value: string } }) => void;\r\n    name: string;\r\n}\r\n\r\nfunction PriceFormatCustom(props: NumberFormatCustomProps) {\r\n    const { inputRef, onChange, ...other } = props;\r\n\r\n    return (\r\n        <NumberFormat\r\n            {...other}\r\n            getInputRef={inputRef}\r\n            onValueChange={(values: any) => {\r\n                onChange({\r\n                    target: {\r\n                        name: props.name,\r\n                        value: values.value,\r\n                    },\r\n                });\r\n            }}\r\n            thousandSeparator=' '\r\n            isNumericString\r\n        />\r\n    );\r\n}\r\n\r\nexport default PriceFormatCustom","C:\\study\\car-ads\\client\\src\\services\\AppendService.ts",["180","181"],"import axios from \"axios\";\r\nimport backEndUrl from \"../BackEndUrl\";\r\n\r\nconst getBrands = async () => {\r\n    const response = await axios.get(`${backEndUrl}/append/brands`);\r\n    return response.data;\r\n};\r\n\r\nconst getModelsByBrand = async (brandId: string) => {\r\n    const response = await axios.get(`${backEndUrl}/append/models/1`);\r\n    return response.data;\r\n}\r\n\r\nconst AppendService = { getBrands, getModelsByBrand };\r\n\r\nexport default AppendService;",{"ruleId":"182","severity":1,"message":"183","line":5,"column":5,"nodeType":"184","messageId":"185","endLine":5,"endColumn":10},{"ruleId":"182","severity":1,"message":"183","line":562,"column":3,"nodeType":"184","messageId":"185","endLine":562,"endColumn":8},{"ruleId":"186","severity":1,"message":"187","line":15,"column":15,"nodeType":"188","messageId":"189","endLine":15,"endColumn":18,"suggestions":"190"},{"ruleId":"186","severity":1,"message":"187","line":16,"column":15,"nodeType":"188","messageId":"189","endLine":16,"endColumn":18,"suggestions":"191"},{"ruleId":"186","severity":1,"message":"187","line":17,"column":14,"nodeType":"188","messageId":"189","endLine":17,"endColumn":17,"suggestions":"192"},{"ruleId":"186","severity":1,"message":"187","line":18,"column":14,"nodeType":"188","messageId":"189","endLine":18,"endColumn":17,"suggestions":"193"},{"ruleId":"186","severity":1,"message":"187","line":19,"column":20,"nodeType":"188","messageId":"189","endLine":19,"endColumn":23,"suggestions":"194"},{"ruleId":"182","severity":1,"message":"195","line":49,"column":9,"nodeType":"184","messageId":"185","endLine":49,"endColumn":21},{"ruleId":"182","severity":1,"message":"195","line":60,"column":9,"nodeType":"184","messageId":"185","endLine":60,"endColumn":21},{"ruleId":"186","severity":1,"message":"187","line":10,"column":32,"nodeType":"188","messageId":"189","endLine":10,"endColumn":35,"suggestions":"196"},{"ruleId":"186","severity":1,"message":"187","line":68,"column":15,"nodeType":"188","messageId":"189","endLine":68,"endColumn":18,"suggestions":"197"},{"ruleId":"182","severity":1,"message":"198","line":70,"column":10,"nodeType":"184","messageId":"185","endLine":70,"endColumn":16},{"ruleId":"182","severity":1,"message":"199","line":70,"column":18,"nodeType":"184","messageId":"185","endLine":70,"endColumn":27},{"ruleId":"182","severity":1,"message":"200","line":71,"column":10,"nodeType":"184","messageId":"185","endLine":71,"endColumn":23},{"ruleId":"182","severity":1,"message":"201","line":71,"column":25,"nodeType":"184","messageId":"185","endLine":71,"endColumn":41},{"ruleId":"182","severity":1,"message":"202","line":72,"column":10,"nodeType":"184","messageId":"185","endLine":72,"endColumn":23},{"ruleId":"182","severity":1,"message":"203","line":72,"column":25,"nodeType":"184","messageId":"185","endLine":72,"endColumn":41},{"ruleId":"182","severity":1,"message":"204","line":73,"column":10,"nodeType":"184","messageId":"185","endLine":73,"endColumn":22},{"ruleId":"182","severity":1,"message":"205","line":73,"column":24,"nodeType":"184","messageId":"185","endLine":73,"endColumn":39},{"ruleId":"182","severity":1,"message":"206","line":74,"column":10,"nodeType":"184","messageId":"185","endLine":74,"endColumn":22},{"ruleId":"182","severity":1,"message":"207","line":74,"column":24,"nodeType":"184","messageId":"185","endLine":74,"endColumn":39},{"ruleId":"186","severity":1,"message":"187","line":78,"column":33,"nodeType":"188","messageId":"189","endLine":78,"endColumn":36,"suggestions":"208"},{"ruleId":"186","severity":1,"message":"187","line":78,"column":45,"nodeType":"188","messageId":"189","endLine":78,"endColumn":48,"suggestions":"209"},{"ruleId":"186","severity":1,"message":"187","line":82,"column":33,"nodeType":"188","messageId":"189","endLine":82,"endColumn":36,"suggestions":"210"},{"ruleId":"186","severity":1,"message":"187","line":82,"column":45,"nodeType":"188","messageId":"189","endLine":82,"endColumn":48,"suggestions":"211"},{"ruleId":"186","severity":1,"message":"187","line":86,"column":32,"nodeType":"188","messageId":"189","endLine":86,"endColumn":35,"suggestions":"212"},{"ruleId":"186","severity":1,"message":"187","line":86,"column":44,"nodeType":"188","messageId":"189","endLine":86,"endColumn":47,"suggestions":"213"},{"ruleId":"186","severity":1,"message":"187","line":90,"column":32,"nodeType":"188","messageId":"189","endLine":90,"endColumn":35,"suggestions":"214"},{"ruleId":"182","severity":1,"message":"215","line":90,"column":37,"nodeType":"184","messageId":"185","endLine":90,"endColumn":47},{"ruleId":"186","severity":1,"message":"187","line":90,"column":44,"nodeType":"188","messageId":"189","endLine":90,"endColumn":47,"suggestions":"216"},{"ruleId":"182","severity":1,"message":"217","line":91,"column":11,"nodeType":"184","messageId":"185","endLine":91,"endColumn":12},{"ruleId":"182","severity":1,"message":"218","line":94,"column":25,"nodeType":"184","messageId":"185","endLine":94,"endColumn":67},{"ruleId":"186","severity":1,"message":"187","line":307,"column":35,"nodeType":"188","messageId":"189","endLine":307,"endColumn":38,"suggestions":"219"},{"ruleId":"186","severity":1,"message":"187","line":330,"column":59,"nodeType":"188","messageId":"189","endLine":330,"endColumn":62,"suggestions":"220"},{"ruleId":"186","severity":1,"message":"187","line":370,"column":58,"nodeType":"188","messageId":"189","endLine":370,"endColumn":61,"suggestions":"221"},{"ruleId":"186","severity":1,"message":"187","line":402,"column":58,"nodeType":"188","messageId":"189","endLine":402,"endColumn":61,"suggestions":"222"},{"ruleId":"182","severity":1,"message":"223","line":419,"column":7,"nodeType":"184","messageId":"185","endLine":419,"endColumn":16},{"ruleId":"182","severity":1,"message":"224","line":425,"column":7,"nodeType":"184","messageId":"185","endLine":425,"endColumn":16},{"ruleId":"186","severity":1,"message":"187","line":5,"column":26,"nodeType":"188","messageId":"189","endLine":5,"endColumn":29,"suggestions":"225"},{"ruleId":"186","severity":1,"message":"187","line":17,"column":37,"nodeType":"188","messageId":"189","endLine":17,"endColumn":40,"suggestions":"226"},{"ruleId":"186","severity":1,"message":"187","line":14,"column":24,"nodeType":"188","messageId":"189","endLine":14,"endColumn":27,"suggestions":"227"},{"ruleId":"186","severity":1,"message":"187","line":17,"column":37,"nodeType":"188","messageId":"189","endLine":17,"endColumn":40,"suggestions":"228"},{"ruleId":"182","severity":1,"message":"229","line":9,"column":7,"nodeType":"184","messageId":"185","endLine":9,"endColumn":23},{"ruleId":"182","severity":1,"message":"230","line":9,"column":33,"nodeType":"184","messageId":"185","endLine":9,"endColumn":48},"unused-imports/no-unused-vars","'theme' is defined but never used. Allowed unused args must match /^_/u.","Identifier","unusedVar","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["231","232"],["233","234"],["235","236"],["237","238"],["239","240"],"'handleCancel' is assigned a value but never used. Allowed unused vars must match /^_/u.",["241","242"],["243","244"],"'images' is assigned a value but never used. Allowed unused vars must match /^_/u.","'setImages' is assigned a value but never used. Allowed unused vars must match /^_/u.","'selectedBrand' is assigned a value but never used. Allowed unused vars must match /^_/u.","'setSelectedBrand' is assigned a value but never used. Allowed unused vars must match /^_/u.","'selectedModel' is assigned a value but never used. Allowed unused vars must match /^_/u.","'setSelectedModel' is assigned a value but never used. Allowed unused vars must match /^_/u.","'selectedYear' is assigned a value but never used. Allowed unused vars must match /^_/u.","'setSelectedYear' is assigned a value but never used. Allowed unused vars must match /^_/u.","'selectedBody' is assigned a value but never used. Allowed unused vars must match /^_/u.","'setSelectedBody' is assigned a value but never used. Allowed unused vars must match /^_/u.",["245","246"],["247","248"],["249","250"],["251","252"],["253","254"],["255","256"],["257","258"],"'value' is defined but never used. Allowed unused args must match /^_/u.",["259","260"],"'a' is assigned a value but never used. Allowed unused vars must match /^_/u.","'event' is defined but never used. Allowed unused args must match /^_/u.",["261","262"],["263","264"],["265","266"],["267","268"],"'testBrand' is assigned a value but never used. Allowed unused vars must match /^_/u.","'testModel' is assigned a value but never used. Allowed unused vars must match /^_/u.",["269","270"],["271","272"],["273","274"],["275","276"],"'getModelsByBrand' is assigned a value but never used. Allowed unused vars must match /^_/u.","'brandId' is defined but never used. Allowed unused args must match /^_/u.",{"messageId":"277","fix":"278","desc":"279"},{"messageId":"280","fix":"281","desc":"282"},{"messageId":"277","fix":"283","desc":"279"},{"messageId":"280","fix":"284","desc":"282"},{"messageId":"277","fix":"285","desc":"279"},{"messageId":"280","fix":"286","desc":"282"},{"messageId":"277","fix":"287","desc":"279"},{"messageId":"280","fix":"288","desc":"282"},{"messageId":"277","fix":"289","desc":"279"},{"messageId":"280","fix":"290","desc":"282"},{"messageId":"277","fix":"291","desc":"279"},{"messageId":"280","fix":"292","desc":"282"},{"messageId":"277","fix":"293","desc":"279"},{"messageId":"280","fix":"294","desc":"282"},{"messageId":"277","fix":"295","desc":"279"},{"messageId":"280","fix":"296","desc":"282"},{"messageId":"277","fix":"297","desc":"279"},{"messageId":"280","fix":"298","desc":"282"},{"messageId":"277","fix":"299","desc":"279"},{"messageId":"280","fix":"300","desc":"282"},{"messageId":"277","fix":"301","desc":"279"},{"messageId":"280","fix":"302","desc":"282"},{"messageId":"277","fix":"303","desc":"279"},{"messageId":"280","fix":"304","desc":"282"},{"messageId":"277","fix":"305","desc":"279"},{"messageId":"280","fix":"306","desc":"282"},{"messageId":"277","fix":"307","desc":"279"},{"messageId":"280","fix":"308","desc":"282"},{"messageId":"277","fix":"309","desc":"279"},{"messageId":"280","fix":"310","desc":"282"},{"messageId":"277","fix":"311","desc":"279"},{"messageId":"280","fix":"312","desc":"282"},{"messageId":"277","fix":"313","desc":"279"},{"messageId":"280","fix":"314","desc":"282"},{"messageId":"277","fix":"315","desc":"279"},{"messageId":"280","fix":"316","desc":"282"},{"messageId":"277","fix":"317","desc":"279"},{"messageId":"280","fix":"318","desc":"282"},{"messageId":"277","fix":"319","desc":"279"},{"messageId":"280","fix":"320","desc":"282"},{"messageId":"277","fix":"321","desc":"279"},{"messageId":"280","fix":"322","desc":"282"},{"messageId":"277","fix":"323","desc":"279"},{"messageId":"280","fix":"324","desc":"282"},{"messageId":"277","fix":"325","desc":"279"},{"messageId":"280","fix":"326","desc":"282"},"suggestUnknown",{"range":"327","text":"328"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"327","text":"329"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"330","text":"328"},{"range":"330","text":"329"},{"range":"331","text":"328"},{"range":"331","text":"329"},{"range":"332","text":"328"},{"range":"332","text":"329"},{"range":"333","text":"328"},{"range":"333","text":"329"},{"range":"334","text":"328"},{"range":"334","text":"329"},{"range":"335","text":"328"},{"range":"335","text":"329"},{"range":"336","text":"328"},{"range":"336","text":"329"},{"range":"337","text":"328"},{"range":"337","text":"329"},{"range":"338","text":"328"},{"range":"338","text":"329"},{"range":"339","text":"328"},{"range":"339","text":"329"},{"range":"340","text":"328"},{"range":"340","text":"329"},{"range":"341","text":"328"},{"range":"341","text":"329"},{"range":"342","text":"328"},{"range":"342","text":"329"},{"range":"343","text":"328"},{"range":"343","text":"329"},{"range":"344","text":"328"},{"range":"344","text":"329"},{"range":"345","text":"328"},{"range":"345","text":"329"},{"range":"346","text":"328"},{"range":"346","text":"329"},{"range":"347","text":"328"},{"range":"347","text":"329"},{"range":"348","text":"328"},{"range":"348","text":"329"},{"range":"349","text":"328"},{"range":"349","text":"329"},{"range":"350","text":"328"},{"range":"350","text":"329"},{"range":"351","text":"328"},{"range":"351","text":"329"},[520,523],"unknown","never",[546,549],[571,574],[596,599],[627,630],[396,399],[2315,2318],[2742,2745],[2754,2757],[2836,2839],[2848,2851],[2929,2932],[2941,2944],[3021,3024],[3033,3036],[11603,11606],[12453,12456],[13719,13722],[15040,15043],[149,152],[524,527],[353,356],[523,526]]