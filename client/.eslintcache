[{"C:\\study\\car-ads\\client\\src\\index.tsx":"1","C:\\study\\car-ads\\client\\src\\reportWebVitals.ts":"2","C:\\study\\car-ads\\client\\src\\App.tsx":"3","C:\\study\\car-ads\\client\\src\\redux\\store.ts":"4","C:\\study\\car-ads\\client\\src\\styles\\muiStyles.ts":"5","C:\\study\\car-ads\\client\\src\\Router.tsx":"6","C:\\study\\car-ads\\client\\src\\redux\\slices\\authSlice.ts":"7","C:\\study\\car-ads\\client\\src\\components\\Footer.tsx":"8","C:\\study\\car-ads\\client\\src\\components\\NavBar.tsx":"9","C:\\study\\car-ads\\client\\src\\redux\\slices\\appendSlice.ts":"10","C:\\study\\car-ads\\client\\src\\Links.ts":"11","C:\\study\\car-ads\\client\\src\\services\\AuthService.ts":"12","C:\\study\\car-ads\\client\\src\\services\\LocalStorageService.ts":"13","C:\\study\\car-ads\\client\\src\\utils\\HelperFunc.ts":"14","C:\\study\\car-ads\\client\\src\\components\\AuthButton.tsx":"15","C:\\study\\car-ads\\client\\src\\components\\PersonalAccountButton.tsx":"16","C:\\study\\car-ads\\client\\src\\pages\\Main\\NotFoundPage.tsx":"17","C:\\study\\car-ads\\client\\src\\pages\\Auth\\LoginPage.tsx":"18","C:\\study\\car-ads\\client\\src\\pages\\Auth\\SignUpPage.tsx":"19","C:\\study\\car-ads\\client\\src\\pages\\Main\\PersonalAccountPage.tsx":"20","C:\\study\\car-ads\\client\\src\\pages\\Main\\MainPage.tsx":"21","C:\\study\\car-ads\\client\\src\\pages\\Main\\AppendAdPage.tsx":"22","C:\\study\\car-ads\\client\\src\\BackEndUrl.ts":"23","C:\\study\\car-ads\\client\\src\\components\\DemoCreds.tsx":"24","C:\\study\\car-ads\\client\\src\\components\\ErrorBox.tsx":"25","C:\\study\\car-ads\\client\\src\\components\\TabPanel.tsx":"26","C:\\study\\car-ads\\client\\src\\components\\ImageUploader.tsx":"27","C:\\study\\car-ads\\client\\src\\components\\MilageTextMask.tsx":"28","C:\\study\\car-ads\\client\\src\\components\\ContactNumberMask.tsx":"29","C:\\study\\car-ads\\client\\src\\components\\PriceFormatMask.tsx":"30"},{"size":663,"mtime":1627446124143,"results":"31","hashOfConfig":"32"},{"size":425,"mtime":1627446124305,"results":"33","hashOfConfig":"32"},{"size":458,"mtime":1627446124040,"results":"34","hashOfConfig":"32"},{"size":464,"mtime":1627647596355,"results":"35","hashOfConfig":"32"},{"size":12078,"mtime":1628073713041,"results":"36","hashOfConfig":"32"},{"size":1558,"mtime":1627447881848,"results":"37","hashOfConfig":"32"},{"size":2618,"mtime":1627446124288,"results":"38","hashOfConfig":"32"},{"size":286,"mtime":1627446124085,"results":"39","hashOfConfig":"32"},{"size":1840,"mtime":1627446124106,"results":"40","hashOfConfig":"32"},{"size":2288,"mtime":1627901199488,"results":"41","hashOfConfig":"32"},{"size":177,"mtime":1627647596144,"results":"42","hashOfConfig":"32"},{"size":518,"mtime":1627446124328,"results":"43","hashOfConfig":"32"},{"size":459,"mtime":1627446124335,"results":"44","hashOfConfig":"32"},{"size":282,"mtime":1627446124416,"results":"45","hashOfConfig":"32"},{"size":615,"mtime":1627446919453,"results":"46","hashOfConfig":"32"},{"size":1600,"mtime":1627447941381,"results":"47","hashOfConfig":"32"},{"size":702,"mtime":1627446969130,"results":"48","hashOfConfig":"32"},{"size":4731,"mtime":1627446124181,"results":"49","hashOfConfig":"32"},{"size":6512,"mtime":1627446124217,"results":"50","hashOfConfig":"32"},{"size":1083,"mtime":1627446124258,"results":"51","hashOfConfig":"32"},{"size":560,"mtime":1627446124235,"results":"52","hashOfConfig":"32"},{"size":18253,"mtime":1628080069108,"results":"53","hashOfConfig":"32"},{"size":71,"mtime":1627384849546,"results":"54","hashOfConfig":"32"},{"size":393,"mtime":1627446124068,"results":"55","hashOfConfig":"32"},{"size":495,"mtime":1627446124079,"results":"56","hashOfConfig":"32"},{"size":521,"mtime":1627447378432,"results":"57","hashOfConfig":"32"},{"size":1917,"mtime":1627647596086,"results":"58","hashOfConfig":"32"},{"size":866,"mtime":1627989374856,"results":"59","hashOfConfig":"32"},{"size":668,"mtime":1627990001353,"results":"60","hashOfConfig":"32"},{"size":864,"mtime":1627991190213,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1uf0s3t",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"64"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"64"},"C:\\study\\car-ads\\client\\src\\index.tsx",[],[],"C:\\study\\car-ads\\client\\src\\reportWebVitals.ts",[],"C:\\study\\car-ads\\client\\src\\App.tsx",[],"C:\\study\\car-ads\\client\\src\\redux\\store.ts",[],"C:\\study\\car-ads\\client\\src\\styles\\muiStyles.ts",["132","133"],"C:\\study\\car-ads\\client\\src\\Router.tsx",[],"C:\\study\\car-ads\\client\\src\\redux\\slices\\authSlice.ts",[],"C:\\study\\car-ads\\client\\src\\components\\Footer.tsx",[],"C:\\study\\car-ads\\client\\src\\components\\NavBar.tsx",[],"C:\\study\\car-ads\\client\\src\\redux\\slices\\appendSlice.ts",["134","135","136","137"],"import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { AppThunk, RootState } from '../store';\nimport { getErrorMsg } from '../../utils/HelperFunc';\nimport { setAuthError } from './authSlice';\n\ninterface InitialAppendState {\n  showModels: boolean;\n  showYear: boolean;\n  modelValue: any | null;\n  brandValue: any | null;\n  yearValue: any | null;\n  bodyValue: any | null;\n  showBody: boolean;\n  showEngine: boolean;\n}\n\nconst initialState: InitialAppendState = {\n  showModels: false,\n  showYear: false,\n  showBody: false,\n  showEngine: true,\n  modelValue: null,\n  brandValue: null,\n  yearValue: null,\n  bodyValue: null,\n};\n\nconst appendSlice = createSlice({\n  name: 'append',\n  initialState,\n  reducers: {\n    setChangeBrand: (state, action: PayloadAction<string>) => {\n      state.showModels = true;\n      state.showYear = false;\n      state.showBody = false;\n      state.brandValue = action.payload;\n      state.modelValue = null;\n      state.yearValue = null;\n      state.bodyValue = null;\n    },\n    setChangeModel: (state, action: PayloadAction<string>) => {\n      state.showYear = true;\n      state.showBody = false;\n      state.modelValue = action.payload;\n      state.yearValue = null;\n      state.bodyValue = null;\n    },\n    setChangeYear: (state, action: PayloadAction<string>) => {\n      state.showBody = true;\n      state.yearValue = action.payload;\n      state.bodyValue = null;\n    },\n  },\n});\n\nexport const { setChangeBrand, setChangeModel, setChangeYear } = appendSlice.actions;\n\nexport const changeBrand = (brandValue: string): AppThunk => {\n  return async dispatch => {\n    try {\n      dispatch(setChangeBrand(brandValue));\n    } catch (e) {\n      dispatch(setAuthError(getErrorMsg(e)));\n    }\n  };\n};\n\nexport const changeModel = (modelValue: string): AppThunk => {\n  return async dispatch => {\n    try {\n      dispatch(setChangeModel(modelValue));\n    } catch (e) {\n      dispatch(setAuthError(getErrorMsg(e)));\n    }\n  };\n};\n\nexport const changeYear = (yearValue: string): AppThunk => {\n  return async dispatch => {\n    try {\n      dispatch(setChangeYear(yearValue));\n    } catch (e) {\n      dispatch(setAuthError(getErrorMsg(e)));\n    }\n  };\n};\n\nexport const selectAppendState = (state: RootState) => state.append;\n\nexport default appendSlice.reducer;\n","C:\\study\\car-ads\\client\\src\\Links.ts",[],"C:\\study\\car-ads\\client\\src\\services\\AuthService.ts",[],"C:\\study\\car-ads\\client\\src\\services\\LocalStorageService.ts",[],"C:\\study\\car-ads\\client\\src\\utils\\HelperFunc.ts",[],"C:\\study\\car-ads\\client\\src\\components\\AuthButton.tsx",[],"C:\\study\\car-ads\\client\\src\\components\\PersonalAccountButton.tsx",[],"C:\\study\\car-ads\\client\\src\\pages\\Main\\NotFoundPage.tsx",[],"C:\\study\\car-ads\\client\\src\\pages\\Auth\\LoginPage.tsx",["138"],"import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login, selectAuthState, cancel, clearAuthError } from '../../redux/slices/authSlice';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\n\nimport CarIcon from '../../svg/logo.png';\nimport { Button, IconButton, InputAdornment, Link, TextField, Typography } from '@material-ui/core';\nimport { Paper } from '@material-ui/core';\nimport { useAuthPageStyles } from '../../styles/muiStyles';\n\nimport PersonIcon from '@material-ui/icons/Person';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport LockIcon from '@material-ui/icons/Lock';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport DemoCreds from '../../components/DemoCreds';\nimport { signupLink } from '../../Links';\nimport { Link as RouterLink } from 'react-router-dom';\nimport ErrorBox from '../../components/ErrorBox';\n\ninterface InputValues {\n  username: string;\n  password: string;\n}\n\nconst validationSchema = yup.object({\n  username: yup.string().required('Required'),\n  password: yup.string().required('Required'),\n});\n\nconst LoginPage = () => {\n  const classes = useAuthPageStyles();\n  const dispatch = useDispatch();\n  const { loading, error } = useSelector(selectAuthState);\n  const [showPass, setShowPass] = useState<boolean>(false);\n  const { register, handleSubmit, errors } = useForm({\n    mode: 'onChange',\n    resolver: yupResolver(validationSchema),\n  });\n  const history = useHistory();\n\n  const handleLogin = ({ username, password }: InputValues) => {\n    dispatch(login({ username, password }, history));\n  };\n\n  const handleCancel = () => {\n    dispatch(cancel());\n  };\n\n  return (\n    <div>\n      <Paper className={classes.root} elevation={2}>\n        <form onSubmit={handleSubmit(handleLogin)} className={classes.form}>\n          <img src={CarIcon} alt='bug-logo' className={classes.titleLogo} />\n          <Typography variant='body1' className={classes.headerText}>\n            Вход\n          </Typography>\n          <div className={classes.inputField}>\n            <TextField\n              required\n              fullWidth\n              inputRef={register}\n              type='text'\n              label='Логин'\n              name='username'\n              variant='outlined'\n              error={'username' in errors}\n              helperText={'username' in errors ? errors.username.message : ''}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position='start'>\n                    <PersonIcon className={classes.iconColor} />\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </div>\n          <div className={classes.inputField}>\n            <TextField\n              required\n              fullWidth\n              inputRef={register}\n              type={showPass ? 'text' : 'password'}\n              label='Пароль'\n              name='password'\n              variant='outlined'\n              error={'password' in errors}\n              helperText={'password' in errors ? errors.password.message : ''}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position='end'>\n                    <IconButton size='small' onClick={() => setShowPass(prevState => !prevState)}>\n                      {showPass ? <VisibilityOffIcon /> : <VisibilityIcon />}\n                    </IconButton>\n                  </InputAdornment>\n                ),\n                startAdornment: (\n                  <InputAdornment position='start'>\n                    <LockIcon className={classes.iconColor} />\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </div>\n          <Button\n            color='inherit'\n            variant='contained'\n            size='large'\n            fullWidth\n            startIcon={<ExitToAppIcon />}\n            type='submit'\n            className={classes.submitButton}\n            disabled={loading}\n          >\n            Войти\n          </Button>\n          <DemoCreds />\n        </form>\n        <Typography variant='body1' className={classes.footerText}>\n          Нет аккаунта?{' '}\n          <Link color='primary' to={signupLink} component={RouterLink}>\n            Зарегистрироваться\n          </Link>\n        </Typography>\n        {error && <ErrorBox errorMsg={error} clearErrorMsg={() => dispatch(clearAuthError())} />}\n      </Paper>\n    </div>\n  );\n};\n\nexport default LoginPage;\n","C:\\study\\car-ads\\client\\src\\pages\\Auth\\SignUpPage.tsx",["139"],"import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectAuthState, cancel, signup, setAuthError, clearAuthError } from '../../redux/slices/authSlice';\n\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\n\nimport CarIcon from '../../svg/logo.png';\nimport { Button, IconButton, InputAdornment, Link, TextField, Typography } from '@material-ui/core';\nimport { Paper } from '@material-ui/core';\nimport { useAuthPageStyles } from '../../styles/muiStyles';\n\nimport PersonIcon from '@material-ui/icons/Person';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport LockIcon from '@material-ui/icons/Lock';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\n\nimport { loginLink } from '../../Links';\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\nimport ErrorBox from '../../components/ErrorBox';\n\ninterface InputValues {\n  username: string;\n  password: string;\n  confirmPassword: string;\n}\n\nconst validationSchema = yup.object({\n  username: yup\n    .string()\n    .required('Required')\n    .max(20, 'Должно быть не более 20 символов')\n    .min(3, 'Должно быть не менее 3 символов')\n    .matches(/^[a-zA-Z0-9-_]*$/, 'Допускаются только буквы, тире и символы подчеркивания'),\n  password: yup.string().required('Required').min(6, 'Должно быть не менее 6 символов'),\n  confirmPassword: yup.string().required('Required').min(6, 'Должно быть не менее 6 символов'),\n});\n\nconst SignupPage = () => {\n  const classes = useAuthPageStyles();\n  const dispatch = useDispatch();\n  const { loading, error } = useSelector(selectAuthState);\n  const [showPass, setShowPass] = useState<boolean>(false);\n  const [showConfirmPass, setShowConfirmPass] = useState<boolean>(false);\n\n  const { register, handleSubmit, errors } = useForm({\n    mode: 'onChange',\n    resolver: yupResolver(validationSchema),\n  });\n  const history = useHistory();\n  const handleSignUp = ({ username, password, confirmPassword }: InputValues) => {\n    if (password !== confirmPassword) {\n      return dispatch(setAuthError('Пароли не совпадают'));\n    }\n    dispatch(signup({ username, password }, history));\n  };\n\n  const handleCancel = () => {\n    dispatch(cancel());\n  };\n\n  return (\n    <div>\n      <Paper className={classes.root} elevation={2}>\n        <form onSubmit={handleSubmit(handleSignUp)} className={classes.form}>\n          <img src={CarIcon} alt='bug-logo' className={classes.titleLogo} />\n          <Typography variant='body1' className={classes.headerText}>\n            Регистрация\n          </Typography>\n          <div className={classes.inputField}>\n            <TextField\n              required\n              fullWidth\n              inputRef={register}\n              type='text'\n              name='username'\n              label='Логин'\n              variant='outlined'\n              error={'username' in errors}\n              helperText={'username' in errors ? errors.username.message : ''}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position='start'>\n                    <PersonIcon className={classes.iconColor} />\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </div>\n          <div className={classes.inputField}>\n            <TextField\n              required\n              fullWidth\n              inputRef={register}\n              type={showPass ? 'text' : 'password'}\n              name='password'\n              label='Пароль'\n              variant='outlined'\n              error={'password' in errors}\n              helperText={'password' in errors ? errors.password.message : ''}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position='end'>\n                    <IconButton size='small' onClick={() => setShowPass(prevState => !prevState)}>\n                      {showPass ? <VisibilityOffIcon /> : <VisibilityIcon />}\n                    </IconButton>\n                  </InputAdornment>\n                ),\n                startAdornment: (\n                  <InputAdornment position='start'>\n                    <LockIcon className={classes.iconColor} />\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </div>\n          <div className={classes.inputField}>\n            <TextField\n              required\n              fullWidth\n              inputRef={register}\n              type={showConfirmPass ? 'text' : 'password'}\n              label='Подтверждение пароля'\n              name='confirmPassword'\n              variant='outlined'\n              error={'confirmPassword' in errors}\n              helperText={'confirmPassword' in errors ? errors.confirmPassword.message : ''}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position='end'>\n                    <IconButton size='small' onClick={() => setShowConfirmPass(prevState => !prevState)}>\n                      {showConfirmPass ? <VisibilityOffIcon /> : <VisibilityIcon />}\n                    </IconButton>\n                  </InputAdornment>\n                ),\n                startAdornment: (\n                  <InputAdornment position='start'>\n                    <LockIcon className={classes.iconColor} />\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </div>\n          <Button\n            color='inherit'\n            variant='contained'\n            size='large'\n            fullWidth\n            startIcon={<PersonAddIcon />}\n            type='submit'\n            className={classes.submitButton}\n            disabled={loading}\n          >\n            Зарегистрироваться\n          </Button>\n        </form>\n        <Typography variant='body1' className={classes.footerText}>\n          Уже есть аккаунт?{' '}\n          <Link color='primary' to={loginLink} component={RouterLink}>\n            Войти\n          </Link>\n        </Typography>\n        {error && <ErrorBox errorMsg={error} clearErrorMsg={() => dispatch(clearAuthError())} />}\n      </Paper>\n    </div>\n  );\n};\n\nexport default SignupPage;\n","C:\\study\\car-ads\\client\\src\\pages\\Main\\PersonalAccountPage.tsx",["140"],"import React from 'react';\nimport { usePersonalAccountStyles } from '../../styles/muiStyles';\nimport { Paper, Tab } from '@material-ui/core';\nimport Tabs from '@material-ui/core/Tabs';\nimport TabPanel from '../../components/TabPanel';\n\nconst PersonalAccountPage = () => {\n  const classes = usePersonalAccountStyles();\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event: any, newValue: React.SetStateAction<number>) => {\n    setValue(newValue);\n  };\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <div className={classes.tabs}>\n          <Tabs value={value} onChange={handleChange}>\n            <Tab label='Объявления' />\n            <Tab label='Настройки' />\n          </Tabs>\n          <TabPanel index={0} value={value}>\n            Тут мои объявления\n          </TabPanel>\n          <TabPanel index={1} value={value}>\n            Тут мои найстройки\n          </TabPanel>\n        </div>\n      </Paper>\n    </div>\n  );\n};\n\nexport default PersonalAccountPage;\n","C:\\study\\car-ads\\client\\src\\pages\\Main\\MainPage.tsx",[],"C:\\study\\car-ads\\client\\src\\pages\\Main\\AppendAdPage.tsx",["141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169"],"C:\\study\\car-ads\\client\\src\\BackEndUrl.ts",[],"C:\\study\\car-ads\\client\\src\\components\\DemoCreds.tsx",[],"C:\\study\\car-ads\\client\\src\\components\\ErrorBox.tsx",[],"C:\\study\\car-ads\\client\\src\\components\\TabPanel.tsx",["170"],"import { Box } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\n\nconst TabPanel = (props: any) => {\n  const { children, value, index, ...other } = props;\n  return (\n    <div role='tabpanel' hidden={value !== index} id={`simple-tabpanel-${index}`} aria-labelledby={`simple-tab-${index}`} {...other}>\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n};\n\nexport default TabPanel;\n","C:\\study\\car-ads\\client\\src\\components\\ImageUploader.tsx",[],[],"C:\\study\\car-ads\\client\\src\\components\\MilageTextMask.tsx",["171"],"import NumberFormat from \"react-number-format\";\r\nimport React from \"react\";\r\n\r\ninterface NumberFormatCustomProps {\r\n    inputRef: (instance: NumberFormat | null) => void;\r\n    onChange: (event: { target: { name: string; value: string } }) => void;\r\n    name: string;\r\n}\r\n\r\nfunction MilageFormatCustom(props: NumberFormatCustomProps) {\r\n    const { inputRef, onChange, ...other } = props;\r\n\r\n    return (\r\n        <NumberFormat\r\n            {...other}\r\n            getInputRef={inputRef}\r\n            onValueChange={(values: any) => {\r\n                onChange({\r\n                    target: {\r\n                        name: props.name,\r\n                        value: values.value,\r\n                    },\r\n                });\r\n            }}\r\n            thousandSeparator=' '\r\n            isNumericString\r\n        />\r\n    );\r\n}\r\n\r\nexport default MilageFormatCustom","C:\\study\\car-ads\\client\\src\\components\\ContactNumberMask.tsx",["172"],"import React from 'react';\r\nimport MaskedInput from 'react-text-mask';\r\n\r\ninterface TextMaskCustomProps {\r\n    inputRef: (ref: HTMLInputElement | null) => void;\r\n}\r\n\r\nfunction ContactNumberMask(props: TextMaskCustomProps) {\r\n    const { inputRef, ...other } = props;\r\n\r\n    return (\r\n        <MaskedInput\r\n            {...other}\r\n            ref={(ref: any) => {\r\n                inputRef(ref ? ref.inputElement : null);\r\n            }}\r\n            mask={['7','(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\r\n            placeholderChar={'\\u2000'}\r\n            showMask\r\n        />\r\n    );\r\n}\r\n\r\nexport default ContactNumberMask;\r\n","C:\\study\\car-ads\\client\\src\\components\\PriceFormatMask.tsx",["173"],"import NumberFormat from \"react-number-format\";\r\nimport React from \"react\";\r\n\r\ninterface NumberFormatCustomProps {\r\n    inputRef: (instance: NumberFormat | null) => void;\r\n    onChange: (event: { target: { name: string; value: string } }) => void;\r\n    name: string;\r\n}\r\n\r\nfunction PriceFormatCustom(props: NumberFormatCustomProps) {\r\n    const { inputRef, onChange, ...other } = props;\r\n\r\n    return (\r\n        <NumberFormat\r\n            {...other}\r\n            getInputRef={inputRef}\r\n            onValueChange={(values: any) => {\r\n                onChange({\r\n                    target: {\r\n                        name: props.name,\r\n                        value: values.value,\r\n                    },\r\n                });\r\n            }}\r\n            thousandSeparator=' '\r\n            isNumericString\r\n        />\r\n    );\r\n}\r\n\r\nexport default PriceFormatCustom",{"ruleId":"174","severity":1,"message":"175","line":5,"column":5,"nodeType":"176","messageId":"177","endLine":5,"endColumn":10},{"ruleId":"174","severity":1,"message":"175","line":562,"column":3,"nodeType":"176","messageId":"177","endLine":562,"endColumn":8},{"ruleId":"178","severity":1,"message":"179","line":9,"column":15,"nodeType":"180","messageId":"181","endLine":9,"endColumn":18,"suggestions":"182"},{"ruleId":"178","severity":1,"message":"179","line":10,"column":15,"nodeType":"180","messageId":"181","endLine":10,"endColumn":18,"suggestions":"183"},{"ruleId":"178","severity":1,"message":"179","line":11,"column":14,"nodeType":"180","messageId":"181","endLine":11,"endColumn":17,"suggestions":"184"},{"ruleId":"178","severity":1,"message":"179","line":12,"column":14,"nodeType":"180","messageId":"181","endLine":12,"endColumn":17,"suggestions":"185"},{"ruleId":"174","severity":1,"message":"186","line":49,"column":9,"nodeType":"176","messageId":"177","endLine":49,"endColumn":21},{"ruleId":"174","severity":1,"message":"186","line":60,"column":9,"nodeType":"176","messageId":"177","endLine":60,"endColumn":21},{"ruleId":"178","severity":1,"message":"179","line":10,"column":32,"nodeType":"180","messageId":"181","endLine":10,"endColumn":35,"suggestions":"187"},{"ruleId":"174","severity":1,"message":"188","line":60,"column":43,"nodeType":"176","messageId":"177","endLine":60,"endColumn":53},{"ruleId":"174","severity":1,"message":"189","line":61,"column":10,"nodeType":"176","messageId":"177","endLine":61,"endColumn":16},{"ruleId":"174","severity":1,"message":"190","line":61,"column":18,"nodeType":"176","messageId":"177","endLine":61,"endColumn":27},{"ruleId":"174","severity":1,"message":"191","line":62,"column":10,"nodeType":"176","messageId":"177","endLine":62,"endColumn":23},{"ruleId":"174","severity":1,"message":"192","line":62,"column":25,"nodeType":"176","messageId":"177","endLine":62,"endColumn":41},{"ruleId":"174","severity":1,"message":"193","line":63,"column":10,"nodeType":"176","messageId":"177","endLine":63,"endColumn":23},{"ruleId":"174","severity":1,"message":"194","line":63,"column":25,"nodeType":"176","messageId":"177","endLine":63,"endColumn":41},{"ruleId":"174","severity":1,"message":"195","line":64,"column":10,"nodeType":"176","messageId":"177","endLine":64,"endColumn":22},{"ruleId":"174","severity":1,"message":"196","line":64,"column":24,"nodeType":"176","messageId":"177","endLine":64,"endColumn":39},{"ruleId":"174","severity":1,"message":"197","line":65,"column":10,"nodeType":"176","messageId":"177","endLine":65,"endColumn":22},{"ruleId":"174","severity":1,"message":"198","line":65,"column":24,"nodeType":"176","messageId":"177","endLine":65,"endColumn":39},{"ruleId":"178","severity":1,"message":"179","line":68,"column":33,"nodeType":"180","messageId":"181","endLine":68,"endColumn":36,"suggestions":"199"},{"ruleId":"178","severity":1,"message":"179","line":68,"column":45,"nodeType":"180","messageId":"181","endLine":68,"endColumn":48,"suggestions":"200"},{"ruleId":"178","severity":1,"message":"179","line":72,"column":33,"nodeType":"180","messageId":"181","endLine":72,"endColumn":36,"suggestions":"201"},{"ruleId":"178","severity":1,"message":"179","line":72,"column":45,"nodeType":"180","messageId":"181","endLine":72,"endColumn":48,"suggestions":"202"},{"ruleId":"178","severity":1,"message":"179","line":76,"column":32,"nodeType":"180","messageId":"181","endLine":76,"endColumn":35,"suggestions":"203"},{"ruleId":"178","severity":1,"message":"179","line":76,"column":44,"nodeType":"180","messageId":"181","endLine":76,"endColumn":47,"suggestions":"204"},{"ruleId":"178","severity":1,"message":"179","line":80,"column":32,"nodeType":"180","messageId":"181","endLine":80,"endColumn":35,"suggestions":"205"},{"ruleId":"174","severity":1,"message":"206","line":80,"column":37,"nodeType":"176","messageId":"177","endLine":80,"endColumn":47},{"ruleId":"178","severity":1,"message":"179","line":80,"column":44,"nodeType":"180","messageId":"181","endLine":80,"endColumn":47,"suggestions":"207"},{"ruleId":"174","severity":1,"message":"208","line":81,"column":11,"nodeType":"176","messageId":"177","endLine":81,"endColumn":12},{"ruleId":"174","severity":1,"message":"209","line":84,"column":25,"nodeType":"176","messageId":"177","endLine":84,"endColumn":67},{"ruleId":"174","severity":1,"message":"208","line":85,"column":11,"nodeType":"176","messageId":"177","endLine":85,"endColumn":12},{"ruleId":"174","severity":1,"message":"210","line":88,"column":11,"nodeType":"176","messageId":"177","endLine":88,"endColumn":19},{"ruleId":"174","severity":1,"message":"211","line":88,"column":35,"nodeType":"176","messageId":"177","endLine":88,"endColumn":41},{"ruleId":"178","severity":1,"message":"179","line":331,"column":35,"nodeType":"180","messageId":"181","endLine":331,"endColumn":38,"suggestions":"212"},{"ruleId":"178","severity":1,"message":"179","line":347,"column":59,"nodeType":"180","messageId":"181","endLine":347,"endColumn":62,"suggestions":"213"},{"ruleId":"178","severity":1,"message":"179","line":381,"column":58,"nodeType":"180","messageId":"181","endLine":381,"endColumn":61,"suggestions":"214"},{"ruleId":"178","severity":1,"message":"179","line":407,"column":58,"nodeType":"180","messageId":"181","endLine":407,"endColumn":61,"suggestions":"215"},{"ruleId":"178","severity":1,"message":"179","line":5,"column":26,"nodeType":"180","messageId":"181","endLine":5,"endColumn":29,"suggestions":"216"},{"ruleId":"178","severity":1,"message":"179","line":17,"column":37,"nodeType":"180","messageId":"181","endLine":17,"endColumn":40,"suggestions":"217"},{"ruleId":"178","severity":1,"message":"179","line":14,"column":24,"nodeType":"180","messageId":"181","endLine":14,"endColumn":27,"suggestions":"218"},{"ruleId":"178","severity":1,"message":"179","line":17,"column":37,"nodeType":"180","messageId":"181","endLine":17,"endColumn":40,"suggestions":"219"},"unused-imports/no-unused-vars","'theme' is defined but never used. Allowed unused args must match /^_/u.","Identifier","unusedVar","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["220","221"],["222","223"],["224","225"],["226","227"],"'handleCancel' is assigned a value but never used. Allowed unused vars must match /^_/u.",["228","229"],"'brandValue' is assigned a value but never used. Allowed unused vars must match /^_/u.","'images' is assigned a value but never used. Allowed unused vars must match /^_/u.","'setImages' is assigned a value but never used. Allowed unused vars must match /^_/u.","'selectedBrand' is assigned a value but never used. Allowed unused vars must match /^_/u.","'setSelectedBrand' is assigned a value but never used. Allowed unused vars must match /^_/u.","'selectedModel' is assigned a value but never used. Allowed unused vars must match /^_/u.","'setSelectedModel' is assigned a value but never used. Allowed unused vars must match /^_/u.","'selectedYear' is assigned a value but never used. Allowed unused vars must match /^_/u.","'setSelectedYear' is assigned a value but never used. Allowed unused vars must match /^_/u.","'selectedBody' is assigned a value but never used. Allowed unused vars must match /^_/u.","'setSelectedBody' is assigned a value but never used. Allowed unused vars must match /^_/u.",["230","231"],["232","233"],["234","235"],["236","237"],["238","239"],["240","241"],["242","243"],"'value' is defined but never used. Allowed unused args must match /^_/u.",["244","245"],"'a' is assigned a value but never used. Allowed unused vars must match /^_/u.","'event' is defined but never used. Allowed unused args must match /^_/u.","'register' is assigned a value but never used. Allowed unused vars must match /^_/u.","'errors' is assigned a value but never used. Allowed unused vars must match /^_/u.",["246","247"],["248","249"],["250","251"],["252","253"],["254","255"],["256","257"],["258","259"],["260","261"],{"messageId":"262","fix":"263","desc":"264"},{"messageId":"265","fix":"266","desc":"267"},{"messageId":"262","fix":"268","desc":"264"},{"messageId":"265","fix":"269","desc":"267"},{"messageId":"262","fix":"270","desc":"264"},{"messageId":"265","fix":"271","desc":"267"},{"messageId":"262","fix":"272","desc":"264"},{"messageId":"265","fix":"273","desc":"267"},{"messageId":"262","fix":"274","desc":"264"},{"messageId":"265","fix":"275","desc":"267"},{"messageId":"262","fix":"276","desc":"264"},{"messageId":"265","fix":"277","desc":"267"},{"messageId":"262","fix":"278","desc":"264"},{"messageId":"265","fix":"279","desc":"267"},{"messageId":"262","fix":"280","desc":"264"},{"messageId":"265","fix":"281","desc":"267"},{"messageId":"262","fix":"282","desc":"264"},{"messageId":"265","fix":"283","desc":"267"},{"messageId":"262","fix":"284","desc":"264"},{"messageId":"265","fix":"285","desc":"267"},{"messageId":"262","fix":"286","desc":"264"},{"messageId":"265","fix":"287","desc":"267"},{"messageId":"262","fix":"288","desc":"264"},{"messageId":"265","fix":"289","desc":"267"},{"messageId":"262","fix":"290","desc":"264"},{"messageId":"265","fix":"291","desc":"267"},{"messageId":"262","fix":"292","desc":"264"},{"messageId":"265","fix":"293","desc":"267"},{"messageId":"262","fix":"294","desc":"264"},{"messageId":"265","fix":"295","desc":"267"},{"messageId":"262","fix":"296","desc":"264"},{"messageId":"265","fix":"297","desc":"267"},{"messageId":"262","fix":"298","desc":"264"},{"messageId":"265","fix":"299","desc":"267"},{"messageId":"262","fix":"300","desc":"264"},{"messageId":"265","fix":"301","desc":"267"},{"messageId":"262","fix":"302","desc":"264"},{"messageId":"265","fix":"303","desc":"267"},{"messageId":"262","fix":"304","desc":"264"},{"messageId":"265","fix":"305","desc":"267"},{"messageId":"262","fix":"306","desc":"264"},{"messageId":"265","fix":"307","desc":"267"},"suggestUnknown",{"range":"308","text":"309"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"308","text":"310"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"311","text":"309"},{"range":"311","text":"310"},{"range":"312","text":"309"},{"range":"312","text":"310"},{"range":"313","text":"309"},{"range":"313","text":"310"},{"range":"314","text":"309"},{"range":"314","text":"310"},{"range":"315","text":"309"},{"range":"315","text":"310"},{"range":"316","text":"309"},{"range":"316","text":"310"},{"range":"317","text":"309"},{"range":"317","text":"310"},{"range":"318","text":"309"},{"range":"318","text":"310"},{"range":"319","text":"309"},{"range":"319","text":"310"},{"range":"320","text":"309"},{"range":"320","text":"310"},{"range":"321","text":"309"},{"range":"321","text":"310"},{"range":"322","text":"309"},{"range":"322","text":"310"},{"range":"323","text":"309"},{"range":"323","text":"310"},{"range":"324","text":"309"},{"range":"324","text":"310"},{"range":"325","text":"309"},{"range":"325","text":"310"},{"range":"326","text":"309"},{"range":"326","text":"310"},{"range":"327","text":"309"},{"range":"327","text":"310"},{"range":"328","text":"309"},{"range":"328","text":"310"},{"range":"329","text":"309"},{"range":"329","text":"310"},{"range":"330","text":"309"},{"range":"330","text":"310"},[299,302],"unknown","never",[325,328],[350,353],[375,378],[396,399],[2718,2721],[2730,2733],[2812,2815],[2824,2827],[2905,2908],[2917,2920],[2997,3000],[3009,3012],[13520,13523],[14096,14099],[15120,15123],[16167,16170],[149,152],[524,527],[353,356],[523,526]]