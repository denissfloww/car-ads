[{"E:\\Study\\car-ads\\client\\src\\index.tsx":"1","E:\\Study\\car-ads\\client\\src\\reportWebVitals.ts":"2","E:\\Study\\car-ads\\client\\src\\redux\\store.ts":"3","E:\\Study\\car-ads\\client\\src\\App.tsx":"4","E:\\Study\\car-ads\\client\\src\\redux\\slices\\authSlice.ts":"5","E:\\Study\\car-ads\\client\\src\\styles\\muiStyles.ts":"6","E:\\Study\\car-ads\\client\\src\\Router.tsx":"7","E:\\Study\\car-ads\\client\\src\\components\\NavBar.tsx":"8","E:\\Study\\car-ads\\client\\src\\components\\Footer.tsx":"9","E:\\Study\\car-ads\\client\\src\\Links.ts":"10","E:\\Study\\car-ads\\client\\src\\services\\AuthService.ts":"11","E:\\Study\\car-ads\\client\\src\\services\\LocalStorageService.ts":"12","E:\\Study\\car-ads\\client\\src\\utils\\HelperFunc.ts":"13","E:\\Study\\car-ads\\client\\src\\pages\\Auth\\LoginPage.tsx":"14","E:\\Study\\car-ads\\client\\src\\pages\\Auth\\SignUpPage.tsx":"15","E:\\Study\\car-ads\\client\\src\\pages\\Main\\NotFoundPage.tsx":"16","E:\\Study\\car-ads\\client\\src\\pages\\Main\\MainPage.tsx":"17","E:\\Study\\car-ads\\client\\src\\pages\\Main\\PersonalAccountPage.tsx":"18","E:\\Study\\car-ads\\client\\src\\BackEndUrl.ts":"19","E:\\Study\\car-ads\\client\\src\\components\\DemoCreds.tsx":"20","E:\\Study\\car-ads\\client\\src\\components\\ErrorBox.tsx":"21","E:\\Study\\car-ads\\client\\src\\components\\TabPanel.tsx":"22","E:\\Study\\car-ads\\client\\src\\components\\AuthButton.tsx":"23","E:\\Study\\car-ads\\client\\src\\components\\PersonalAccountButton.tsx":"24"},{"size":684,"mtime":1627396291523,"results":"25","hashOfConfig":"26"},{"size":440,"mtime":1627212042236,"results":"27","hashOfConfig":"26"},{"size":400,"mtime":1627396291527,"results":"28","hashOfConfig":"26"},{"size":480,"mtime":1627396291519,"results":"29","hashOfConfig":"26"},{"size":2773,"mtime":1627396291526,"results":"30","hashOfConfig":"26"},{"size":11738,"mtime":1627404784154,"results":"31","hashOfConfig":"32"},{"size":1404,"mtime":1627396291521,"results":"33","hashOfConfig":"26"},{"size":3516,"mtime":1627402962506,"results":"34","hashOfConfig":"32"},{"size":321,"mtime":1627396291522,"results":"35","hashOfConfig":"26"},{"size":144,"mtime":1627396291520,"results":"36","hashOfConfig":"26"},{"size":539,"mtime":1627396291528,"results":"37","hashOfConfig":"26"},{"size":483,"mtime":1627396291535,"results":"38","hashOfConfig":"26"},{"size":298,"mtime":1627396291536,"results":"39","hashOfConfig":"26"},{"size":5024,"mtime":1627396291524,"results":"40","hashOfConfig":"26"},{"size":7214,"mtime":1627396291524,"results":"41","hashOfConfig":"26"},{"size":775,"mtime":1627396291525,"results":"42","hashOfConfig":"26"},{"size":631,"mtime":1627396291525,"results":"43","hashOfConfig":"26"},{"size":1227,"mtime":1627404855429,"results":"44","hashOfConfig":"32"},{"size":73,"mtime":1627396291520,"results":"45","hashOfConfig":"26"},{"size":407,"mtime":1627396291521,"results":"46","hashOfConfig":"26"},{"size":519,"mtime":1627396291521,"results":"47","hashOfConfig":"26"},{"size":662,"mtime":1627399764657,"results":"48","hashOfConfig":"26"},{"size":1215,"mtime":1627402257664,"results":"49","hashOfConfig":"32"},{"size":1737,"mtime":1627404579066,"results":"50","hashOfConfig":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"1315dbh",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1j5qmms",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"53"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"53"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Study\\car-ads\\client\\src\\index.tsx",[],[],"E:\\Study\\car-ads\\client\\src\\reportWebVitals.ts",[],"E:\\Study\\car-ads\\client\\src\\redux\\store.ts",[],"E:\\Study\\car-ads\\client\\src\\App.tsx",[],"E:\\Study\\car-ads\\client\\src\\redux\\slices\\authSlice.ts",[],"E:\\Study\\car-ads\\client\\src\\styles\\muiStyles.ts",[],"E:\\Study\\car-ads\\client\\src\\Router.tsx",[],"E:\\Study\\car-ads\\client\\src\\components\\NavBar.tsx",[],"E:\\Study\\car-ads\\client\\src\\components\\Footer.tsx",[],"E:\\Study\\car-ads\\client\\src\\Links.ts",[],"E:\\Study\\car-ads\\client\\src\\services\\AuthService.ts",[],"E:\\Study\\car-ads\\client\\src\\services\\LocalStorageService.ts",[],"E:\\Study\\car-ads\\client\\src\\utils\\HelperFunc.ts",[],"E:\\Study\\car-ads\\client\\src\\pages\\Auth\\LoginPage.tsx",["102"],"import React, { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  login,\r\n  selectAuthState,\r\n  cancel,\r\n  clearAuthError\r\n} from '../../redux/slices/authSlice';\r\nimport * as yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\nimport CarIcon from '../../svg/logo.png';\r\nimport {\r\n  Button,\r\n  IconButton,\r\n  InputAdornment,\r\n  Link,\r\n  TextField,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport { Paper } from '@material-ui/core';\r\nimport { useAuthPageStyles } from '../../styles/muiStyles';\r\n\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport DemoCreds from '../../components/DemoCreds';\r\nimport { signupLink } from '../../Links';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport ErrorBox from '../../components/ErrorBox';\r\n\r\ninterface InputValues {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nconst validationSchema = yup.object({\r\n  username: yup.string().required('Required'),\r\n  password: yup.string().required('Required')\r\n});\r\n\r\nconst LoginPage = () => {\r\n  const classes = useAuthPageStyles();\r\n  const dispatch = useDispatch();\r\n  const { loading, error } = useSelector(selectAuthState);\r\n  const [showPass, setShowPass] = useState<boolean>(false);\r\n  const { register, handleSubmit, errors } = useForm({\r\n    mode: 'onChange',\r\n    resolver: yupResolver(validationSchema)\r\n  });\r\n  const history = useHistory();\r\n\r\n  const handleLogin = ({ username, password }: InputValues) => {\r\n    dispatch(login({ username, password }, history));\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    dispatch(cancel());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root} elevation={2}>\r\n        <form onSubmit={handleSubmit(handleLogin)} className={classes.form}>\r\n          <img src={CarIcon} alt=\"bug-logo\" className={classes.titleLogo} />\r\n          <Typography variant=\"body1\" className={classes.headerText}>\r\n            Вход\r\n          </Typography>\r\n          <div className={classes.inputField}>\r\n            <TextField\r\n              required\r\n              fullWidth\r\n              inputRef={register}\r\n              type=\"text\"\r\n              label=\"Логин\"\r\n              name=\"username\"\r\n              variant=\"outlined\"\r\n              error={'username' in errors}\r\n              helperText={'username' in errors ? errors.username.message : ''}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <PersonIcon className={classes.iconColor} />\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n          </div>\r\n          <div className={classes.inputField}>\r\n            <TextField\r\n              required\r\n              fullWidth\r\n              inputRef={register}\r\n              type={showPass ? 'text' : 'password'}\r\n              label=\"Пароль\"\r\n              name=\"password\"\r\n              variant=\"outlined\"\r\n              error={'password' in errors}\r\n              helperText={'password' in errors ? errors.password.message : ''}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      size=\"small\"\r\n                      onClick={() => setShowPass((prevState) => !prevState)}\r\n                    >\r\n                      {showPass ? <VisibilityOffIcon /> : <VisibilityIcon />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <LockIcon className={classes.iconColor} />\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n          </div>\r\n          <Button\r\n            color=\"inherit\"\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            fullWidth\r\n            startIcon={<ExitToAppIcon />}\r\n            type=\"submit\"\r\n            className={classes.submitButton}\r\n            disabled={loading}\r\n          >\r\n            Войти\r\n          </Button>\r\n          <DemoCreds />\r\n        </form>\r\n        <Typography variant=\"body1\" className={classes.footerText}>\r\n          Нет аккаунта?{' '}\r\n          <Link color=\"primary\" to={signupLink} component={RouterLink}>\r\n            Зарегистрироваться\r\n          </Link>\r\n        </Typography>\r\n        {error && (\r\n          <ErrorBox\r\n            errorMsg={error}\r\n            clearErrorMsg={() => dispatch(clearAuthError())}\r\n          />\r\n        )}\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","E:\\Study\\car-ads\\client\\src\\pages\\Auth\\SignUpPage.tsx",["103"],"import React, { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  selectAuthState,\r\n  cancel,\r\n  signup,\r\n  setAuthError,\r\n  clearAuthError\r\n} from '../../redux/slices/authSlice';\r\n\r\nimport * as yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\nimport CarIcon from '../../svg/logo.png';\r\nimport {\r\n  Button,\r\n  IconButton,\r\n  InputAdornment,\r\n  Link,\r\n  TextField,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport { Paper } from '@material-ui/core';\r\nimport { useAuthPageStyles } from '../../styles/muiStyles';\r\n\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\n\r\nimport { loginLink } from '../../Links';\r\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\r\nimport ErrorBox from '../../components/ErrorBox';\r\n\r\ninterface InputValues {\r\n  username: string;\r\n  password: string;\r\n  confirmPassword: string;\r\n}\r\n\r\nconst validationSchema = yup.object({\r\n  username: yup\r\n    .string()\r\n    .required('Required')\r\n    .max(20, 'Должно быть не более 20 символов')\r\n    .min(3, 'Должно быть не менее 3 символов')\r\n    .matches(\r\n      /^[a-zA-Z0-9-_]*$/,\r\n      'Допускаются только буквы, тире и символы подчеркивания'\r\n    ),\r\n  password: yup\r\n    .string()\r\n    .required('Required')\r\n    .min(6, 'Должно быть не менее 6 символов'),\r\n  confirmPassword: yup\r\n    .string()\r\n    .required('Required')\r\n    .min(6, 'Должно быть не менее 6 символов')\r\n});\r\n\r\nconst SignupPage = () => {\r\n  const classes = useAuthPageStyles();\r\n  const dispatch = useDispatch();\r\n  const { loading, error } = useSelector(selectAuthState);\r\n  const [showPass, setShowPass] = useState<boolean>(false);\r\n  const [showConfirmPass, setShowConfirmPass] = useState<boolean>(false);\r\n\r\n  const { register, handleSubmit, errors } = useForm({\r\n    mode: 'onChange',\r\n    resolver: yupResolver(validationSchema)\r\n  });\r\n  const history = useHistory();\r\n  const handleSignUp = ({\r\n    username,\r\n    password,\r\n    confirmPassword\r\n  }: InputValues) => {\r\n    if (password !== confirmPassword) {\r\n      return dispatch(setAuthError('Пароли не совпадают'));\r\n    }\r\n    dispatch(signup({ username, password }, history));\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    dispatch(cancel());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root} elevation={2}>\r\n        <form onSubmit={handleSubmit(handleSignUp)} className={classes.form}>\r\n          <img src={CarIcon} alt=\"bug-logo\" className={classes.titleLogo} />\r\n          <Typography variant=\"body1\" className={classes.headerText}>\r\n            Регистрация\r\n          </Typography>\r\n          <div className={classes.inputField}>\r\n            <TextField\r\n              required\r\n              fullWidth\r\n              inputRef={register}\r\n              type=\"text\"\r\n              name=\"username\"\r\n              label=\"Логин\"\r\n              variant=\"outlined\"\r\n              error={'username' in errors}\r\n              helperText={'username' in errors ? errors.username.message : ''}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <PersonIcon className={classes.iconColor} />\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n          </div>\r\n          <div className={classes.inputField}>\r\n            <TextField\r\n              required\r\n              fullWidth\r\n              inputRef={register}\r\n              type={showPass ? 'text' : 'password'}\r\n              name=\"password\"\r\n              label=\"Пароль\"\r\n              variant=\"outlined\"\r\n              error={'password' in errors}\r\n              helperText={'password' in errors ? errors.password.message : ''}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      size=\"small\"\r\n                      onClick={() => setShowPass((prevState) => !prevState)}\r\n                    >\r\n                      {showPass ? <VisibilityOffIcon /> : <VisibilityIcon />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <LockIcon className={classes.iconColor} />\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n          </div>\r\n          <div className={classes.inputField}>\r\n            <TextField\r\n              required\r\n              fullWidth\r\n              inputRef={register}\r\n              type={showConfirmPass ? 'text' : 'password'}\r\n              label=\"Подтверждение пароля\"\r\n              name=\"confirmPassword\"\r\n              variant=\"outlined\"\r\n              error={'confirmPassword' in errors}\r\n              helperText={\r\n                'confirmPassword' in errors\r\n                  ? errors.confirmPassword.message\r\n                  : ''\r\n              }\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      size=\"small\"\r\n                      onClick={() =>\r\n                        setShowConfirmPass((prevState) => !prevState)\r\n                      }\r\n                    >\r\n                      {showConfirmPass ? (\r\n                        <VisibilityOffIcon />\r\n                      ) : (\r\n                        <VisibilityIcon />\r\n                      )}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <LockIcon className={classes.iconColor} />\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n          </div>\r\n          <Button\r\n            color=\"inherit\"\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            fullWidth\r\n            startIcon={<PersonAddIcon />}\r\n            type=\"submit\"\r\n            className={classes.submitButton}\r\n            disabled={loading}\r\n          >\r\n            Зарегистрироваться\r\n          </Button>\r\n        </form>\r\n        <Typography variant=\"body1\" className={classes.footerText}>\r\n          Уже есть аккаунт?{' '}\r\n          <Link color=\"primary\" to={loginLink} component={RouterLink}>\r\n            Войти\r\n          </Link>\r\n        </Typography>\r\n        {error && (\r\n          <ErrorBox\r\n            errorMsg={error}\r\n            clearErrorMsg={() => dispatch(clearAuthError())}\r\n          />\r\n        )}\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignupPage;\r\n","E:\\Study\\car-ads\\client\\src\\pages\\Main\\NotFoundPage.tsx",[],"E:\\Study\\car-ads\\client\\src\\pages\\Main\\MainPage.tsx",[],"E:\\Study\\car-ads\\client\\src\\pages\\Main\\PersonalAccountPage.tsx",["104"],"E:\\Study\\car-ads\\client\\src\\BackEndUrl.ts",[],"E:\\Study\\car-ads\\client\\src\\components\\DemoCreds.tsx",[],"E:\\Study\\car-ads\\client\\src\\components\\ErrorBox.tsx",[],"E:\\Study\\car-ads\\client\\src\\components\\TabPanel.tsx",["105"],"E:\\Study\\car-ads\\client\\src\\components\\AuthButton.tsx",[],"E:\\Study\\car-ads\\client\\src\\components\\PersonalAccountButton.tsx",[],{"ruleId":"106","severity":1,"message":"107","line":61,"column":9,"nodeType":"108","messageId":"109","endLine":61,"endColumn":21},{"ruleId":"106","severity":1,"message":"107","line":86,"column":9,"nodeType":"108","messageId":"109","endLine":86,"endColumn":21},{"ruleId":"110","severity":1,"message":"111","line":11,"column":32,"nodeType":"112","messageId":"113","endLine":11,"endColumn":35,"suggestions":"114"},{"ruleId":"110","severity":1,"message":"111","line":5,"column":26,"nodeType":"112","messageId":"113","endLine":5,"endColumn":29,"suggestions":"115"},"unused-imports/no-unused-vars","'handleCancel' is assigned a value but never used. Allowed unused vars must match /^_/u.","Identifier","unusedVar","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["116","117"],["118","119"],{"messageId":"120","fix":"121","desc":"122"},{"messageId":"123","fix":"124","desc":"125"},{"messageId":"120","fix":"126","desc":"122"},{"messageId":"123","fix":"127","desc":"125"},"suggestUnknown",{"range":"128","text":"129"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"128","text":"130"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"131","text":"129"},{"range":"131","text":"130"},[404,407],"unknown","never",[151,154]]